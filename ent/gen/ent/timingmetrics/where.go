// Code generated by ent, DO NOT EDIT.

package timingmetrics

import (
	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"github.com/buildbarn/bb-portal/ent/gen/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.TimingMetrics {
	return predicate.TimingMetrics(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.TimingMetrics {
	return predicate.TimingMetrics(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.TimingMetrics {
	return predicate.TimingMetrics(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.TimingMetrics {
	return predicate.TimingMetrics(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.TimingMetrics {
	return predicate.TimingMetrics(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.TimingMetrics {
	return predicate.TimingMetrics(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.TimingMetrics {
	return predicate.TimingMetrics(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.TimingMetrics {
	return predicate.TimingMetrics(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.TimingMetrics {
	return predicate.TimingMetrics(sql.FieldLTE(FieldID, id))
}

// CPUTimeInMs applies equality check predicate on the "cpu_time_in_ms" field. It's identical to CPUTimeInMsEQ.
func CPUTimeInMs(v int64) predicate.TimingMetrics {
	return predicate.TimingMetrics(sql.FieldEQ(FieldCPUTimeInMs, v))
}

// WallTimeInMs applies equality check predicate on the "wall_time_in_ms" field. It's identical to WallTimeInMsEQ.
func WallTimeInMs(v int64) predicate.TimingMetrics {
	return predicate.TimingMetrics(sql.FieldEQ(FieldWallTimeInMs, v))
}

// AnalysisPhaseTimeInMs applies equality check predicate on the "analysis_phase_time_in_ms" field. It's identical to AnalysisPhaseTimeInMsEQ.
func AnalysisPhaseTimeInMs(v int64) predicate.TimingMetrics {
	return predicate.TimingMetrics(sql.FieldEQ(FieldAnalysisPhaseTimeInMs, v))
}

// ExecutionPhaseTimeInMs applies equality check predicate on the "execution_phase_time_in_ms" field. It's identical to ExecutionPhaseTimeInMsEQ.
func ExecutionPhaseTimeInMs(v int64) predicate.TimingMetrics {
	return predicate.TimingMetrics(sql.FieldEQ(FieldExecutionPhaseTimeInMs, v))
}

// ActionsExecutionStartInMs applies equality check predicate on the "actions_execution_start_in_ms" field. It's identical to ActionsExecutionStartInMsEQ.
func ActionsExecutionStartInMs(v int64) predicate.TimingMetrics {
	return predicate.TimingMetrics(sql.FieldEQ(FieldActionsExecutionStartInMs, v))
}

// CPUTimeInMsEQ applies the EQ predicate on the "cpu_time_in_ms" field.
func CPUTimeInMsEQ(v int64) predicate.TimingMetrics {
	return predicate.TimingMetrics(sql.FieldEQ(FieldCPUTimeInMs, v))
}

// CPUTimeInMsNEQ applies the NEQ predicate on the "cpu_time_in_ms" field.
func CPUTimeInMsNEQ(v int64) predicate.TimingMetrics {
	return predicate.TimingMetrics(sql.FieldNEQ(FieldCPUTimeInMs, v))
}

// CPUTimeInMsIn applies the In predicate on the "cpu_time_in_ms" field.
func CPUTimeInMsIn(vs ...int64) predicate.TimingMetrics {
	return predicate.TimingMetrics(sql.FieldIn(FieldCPUTimeInMs, vs...))
}

// CPUTimeInMsNotIn applies the NotIn predicate on the "cpu_time_in_ms" field.
func CPUTimeInMsNotIn(vs ...int64) predicate.TimingMetrics {
	return predicate.TimingMetrics(sql.FieldNotIn(FieldCPUTimeInMs, vs...))
}

// CPUTimeInMsGT applies the GT predicate on the "cpu_time_in_ms" field.
func CPUTimeInMsGT(v int64) predicate.TimingMetrics {
	return predicate.TimingMetrics(sql.FieldGT(FieldCPUTimeInMs, v))
}

// CPUTimeInMsGTE applies the GTE predicate on the "cpu_time_in_ms" field.
func CPUTimeInMsGTE(v int64) predicate.TimingMetrics {
	return predicate.TimingMetrics(sql.FieldGTE(FieldCPUTimeInMs, v))
}

// CPUTimeInMsLT applies the LT predicate on the "cpu_time_in_ms" field.
func CPUTimeInMsLT(v int64) predicate.TimingMetrics {
	return predicate.TimingMetrics(sql.FieldLT(FieldCPUTimeInMs, v))
}

// CPUTimeInMsLTE applies the LTE predicate on the "cpu_time_in_ms" field.
func CPUTimeInMsLTE(v int64) predicate.TimingMetrics {
	return predicate.TimingMetrics(sql.FieldLTE(FieldCPUTimeInMs, v))
}

// CPUTimeInMsIsNil applies the IsNil predicate on the "cpu_time_in_ms" field.
func CPUTimeInMsIsNil() predicate.TimingMetrics {
	return predicate.TimingMetrics(sql.FieldIsNull(FieldCPUTimeInMs))
}

// CPUTimeInMsNotNil applies the NotNil predicate on the "cpu_time_in_ms" field.
func CPUTimeInMsNotNil() predicate.TimingMetrics {
	return predicate.TimingMetrics(sql.FieldNotNull(FieldCPUTimeInMs))
}

// WallTimeInMsEQ applies the EQ predicate on the "wall_time_in_ms" field.
func WallTimeInMsEQ(v int64) predicate.TimingMetrics {
	return predicate.TimingMetrics(sql.FieldEQ(FieldWallTimeInMs, v))
}

// WallTimeInMsNEQ applies the NEQ predicate on the "wall_time_in_ms" field.
func WallTimeInMsNEQ(v int64) predicate.TimingMetrics {
	return predicate.TimingMetrics(sql.FieldNEQ(FieldWallTimeInMs, v))
}

// WallTimeInMsIn applies the In predicate on the "wall_time_in_ms" field.
func WallTimeInMsIn(vs ...int64) predicate.TimingMetrics {
	return predicate.TimingMetrics(sql.FieldIn(FieldWallTimeInMs, vs...))
}

// WallTimeInMsNotIn applies the NotIn predicate on the "wall_time_in_ms" field.
func WallTimeInMsNotIn(vs ...int64) predicate.TimingMetrics {
	return predicate.TimingMetrics(sql.FieldNotIn(FieldWallTimeInMs, vs...))
}

// WallTimeInMsGT applies the GT predicate on the "wall_time_in_ms" field.
func WallTimeInMsGT(v int64) predicate.TimingMetrics {
	return predicate.TimingMetrics(sql.FieldGT(FieldWallTimeInMs, v))
}

// WallTimeInMsGTE applies the GTE predicate on the "wall_time_in_ms" field.
func WallTimeInMsGTE(v int64) predicate.TimingMetrics {
	return predicate.TimingMetrics(sql.FieldGTE(FieldWallTimeInMs, v))
}

// WallTimeInMsLT applies the LT predicate on the "wall_time_in_ms" field.
func WallTimeInMsLT(v int64) predicate.TimingMetrics {
	return predicate.TimingMetrics(sql.FieldLT(FieldWallTimeInMs, v))
}

// WallTimeInMsLTE applies the LTE predicate on the "wall_time_in_ms" field.
func WallTimeInMsLTE(v int64) predicate.TimingMetrics {
	return predicate.TimingMetrics(sql.FieldLTE(FieldWallTimeInMs, v))
}

// WallTimeInMsIsNil applies the IsNil predicate on the "wall_time_in_ms" field.
func WallTimeInMsIsNil() predicate.TimingMetrics {
	return predicate.TimingMetrics(sql.FieldIsNull(FieldWallTimeInMs))
}

// WallTimeInMsNotNil applies the NotNil predicate on the "wall_time_in_ms" field.
func WallTimeInMsNotNil() predicate.TimingMetrics {
	return predicate.TimingMetrics(sql.FieldNotNull(FieldWallTimeInMs))
}

// AnalysisPhaseTimeInMsEQ applies the EQ predicate on the "analysis_phase_time_in_ms" field.
func AnalysisPhaseTimeInMsEQ(v int64) predicate.TimingMetrics {
	return predicate.TimingMetrics(sql.FieldEQ(FieldAnalysisPhaseTimeInMs, v))
}

// AnalysisPhaseTimeInMsNEQ applies the NEQ predicate on the "analysis_phase_time_in_ms" field.
func AnalysisPhaseTimeInMsNEQ(v int64) predicate.TimingMetrics {
	return predicate.TimingMetrics(sql.FieldNEQ(FieldAnalysisPhaseTimeInMs, v))
}

// AnalysisPhaseTimeInMsIn applies the In predicate on the "analysis_phase_time_in_ms" field.
func AnalysisPhaseTimeInMsIn(vs ...int64) predicate.TimingMetrics {
	return predicate.TimingMetrics(sql.FieldIn(FieldAnalysisPhaseTimeInMs, vs...))
}

// AnalysisPhaseTimeInMsNotIn applies the NotIn predicate on the "analysis_phase_time_in_ms" field.
func AnalysisPhaseTimeInMsNotIn(vs ...int64) predicate.TimingMetrics {
	return predicate.TimingMetrics(sql.FieldNotIn(FieldAnalysisPhaseTimeInMs, vs...))
}

// AnalysisPhaseTimeInMsGT applies the GT predicate on the "analysis_phase_time_in_ms" field.
func AnalysisPhaseTimeInMsGT(v int64) predicate.TimingMetrics {
	return predicate.TimingMetrics(sql.FieldGT(FieldAnalysisPhaseTimeInMs, v))
}

// AnalysisPhaseTimeInMsGTE applies the GTE predicate on the "analysis_phase_time_in_ms" field.
func AnalysisPhaseTimeInMsGTE(v int64) predicate.TimingMetrics {
	return predicate.TimingMetrics(sql.FieldGTE(FieldAnalysisPhaseTimeInMs, v))
}

// AnalysisPhaseTimeInMsLT applies the LT predicate on the "analysis_phase_time_in_ms" field.
func AnalysisPhaseTimeInMsLT(v int64) predicate.TimingMetrics {
	return predicate.TimingMetrics(sql.FieldLT(FieldAnalysisPhaseTimeInMs, v))
}

// AnalysisPhaseTimeInMsLTE applies the LTE predicate on the "analysis_phase_time_in_ms" field.
func AnalysisPhaseTimeInMsLTE(v int64) predicate.TimingMetrics {
	return predicate.TimingMetrics(sql.FieldLTE(FieldAnalysisPhaseTimeInMs, v))
}

// AnalysisPhaseTimeInMsIsNil applies the IsNil predicate on the "analysis_phase_time_in_ms" field.
func AnalysisPhaseTimeInMsIsNil() predicate.TimingMetrics {
	return predicate.TimingMetrics(sql.FieldIsNull(FieldAnalysisPhaseTimeInMs))
}

// AnalysisPhaseTimeInMsNotNil applies the NotNil predicate on the "analysis_phase_time_in_ms" field.
func AnalysisPhaseTimeInMsNotNil() predicate.TimingMetrics {
	return predicate.TimingMetrics(sql.FieldNotNull(FieldAnalysisPhaseTimeInMs))
}

// ExecutionPhaseTimeInMsEQ applies the EQ predicate on the "execution_phase_time_in_ms" field.
func ExecutionPhaseTimeInMsEQ(v int64) predicate.TimingMetrics {
	return predicate.TimingMetrics(sql.FieldEQ(FieldExecutionPhaseTimeInMs, v))
}

// ExecutionPhaseTimeInMsNEQ applies the NEQ predicate on the "execution_phase_time_in_ms" field.
func ExecutionPhaseTimeInMsNEQ(v int64) predicate.TimingMetrics {
	return predicate.TimingMetrics(sql.FieldNEQ(FieldExecutionPhaseTimeInMs, v))
}

// ExecutionPhaseTimeInMsIn applies the In predicate on the "execution_phase_time_in_ms" field.
func ExecutionPhaseTimeInMsIn(vs ...int64) predicate.TimingMetrics {
	return predicate.TimingMetrics(sql.FieldIn(FieldExecutionPhaseTimeInMs, vs...))
}

// ExecutionPhaseTimeInMsNotIn applies the NotIn predicate on the "execution_phase_time_in_ms" field.
func ExecutionPhaseTimeInMsNotIn(vs ...int64) predicate.TimingMetrics {
	return predicate.TimingMetrics(sql.FieldNotIn(FieldExecutionPhaseTimeInMs, vs...))
}

// ExecutionPhaseTimeInMsGT applies the GT predicate on the "execution_phase_time_in_ms" field.
func ExecutionPhaseTimeInMsGT(v int64) predicate.TimingMetrics {
	return predicate.TimingMetrics(sql.FieldGT(FieldExecutionPhaseTimeInMs, v))
}

// ExecutionPhaseTimeInMsGTE applies the GTE predicate on the "execution_phase_time_in_ms" field.
func ExecutionPhaseTimeInMsGTE(v int64) predicate.TimingMetrics {
	return predicate.TimingMetrics(sql.FieldGTE(FieldExecutionPhaseTimeInMs, v))
}

// ExecutionPhaseTimeInMsLT applies the LT predicate on the "execution_phase_time_in_ms" field.
func ExecutionPhaseTimeInMsLT(v int64) predicate.TimingMetrics {
	return predicate.TimingMetrics(sql.FieldLT(FieldExecutionPhaseTimeInMs, v))
}

// ExecutionPhaseTimeInMsLTE applies the LTE predicate on the "execution_phase_time_in_ms" field.
func ExecutionPhaseTimeInMsLTE(v int64) predicate.TimingMetrics {
	return predicate.TimingMetrics(sql.FieldLTE(FieldExecutionPhaseTimeInMs, v))
}

// ExecutionPhaseTimeInMsIsNil applies the IsNil predicate on the "execution_phase_time_in_ms" field.
func ExecutionPhaseTimeInMsIsNil() predicate.TimingMetrics {
	return predicate.TimingMetrics(sql.FieldIsNull(FieldExecutionPhaseTimeInMs))
}

// ExecutionPhaseTimeInMsNotNil applies the NotNil predicate on the "execution_phase_time_in_ms" field.
func ExecutionPhaseTimeInMsNotNil() predicate.TimingMetrics {
	return predicate.TimingMetrics(sql.FieldNotNull(FieldExecutionPhaseTimeInMs))
}

// ActionsExecutionStartInMsEQ applies the EQ predicate on the "actions_execution_start_in_ms" field.
func ActionsExecutionStartInMsEQ(v int64) predicate.TimingMetrics {
	return predicate.TimingMetrics(sql.FieldEQ(FieldActionsExecutionStartInMs, v))
}

// ActionsExecutionStartInMsNEQ applies the NEQ predicate on the "actions_execution_start_in_ms" field.
func ActionsExecutionStartInMsNEQ(v int64) predicate.TimingMetrics {
	return predicate.TimingMetrics(sql.FieldNEQ(FieldActionsExecutionStartInMs, v))
}

// ActionsExecutionStartInMsIn applies the In predicate on the "actions_execution_start_in_ms" field.
func ActionsExecutionStartInMsIn(vs ...int64) predicate.TimingMetrics {
	return predicate.TimingMetrics(sql.FieldIn(FieldActionsExecutionStartInMs, vs...))
}

// ActionsExecutionStartInMsNotIn applies the NotIn predicate on the "actions_execution_start_in_ms" field.
func ActionsExecutionStartInMsNotIn(vs ...int64) predicate.TimingMetrics {
	return predicate.TimingMetrics(sql.FieldNotIn(FieldActionsExecutionStartInMs, vs...))
}

// ActionsExecutionStartInMsGT applies the GT predicate on the "actions_execution_start_in_ms" field.
func ActionsExecutionStartInMsGT(v int64) predicate.TimingMetrics {
	return predicate.TimingMetrics(sql.FieldGT(FieldActionsExecutionStartInMs, v))
}

// ActionsExecutionStartInMsGTE applies the GTE predicate on the "actions_execution_start_in_ms" field.
func ActionsExecutionStartInMsGTE(v int64) predicate.TimingMetrics {
	return predicate.TimingMetrics(sql.FieldGTE(FieldActionsExecutionStartInMs, v))
}

// ActionsExecutionStartInMsLT applies the LT predicate on the "actions_execution_start_in_ms" field.
func ActionsExecutionStartInMsLT(v int64) predicate.TimingMetrics {
	return predicate.TimingMetrics(sql.FieldLT(FieldActionsExecutionStartInMs, v))
}

// ActionsExecutionStartInMsLTE applies the LTE predicate on the "actions_execution_start_in_ms" field.
func ActionsExecutionStartInMsLTE(v int64) predicate.TimingMetrics {
	return predicate.TimingMetrics(sql.FieldLTE(FieldActionsExecutionStartInMs, v))
}

// ActionsExecutionStartInMsIsNil applies the IsNil predicate on the "actions_execution_start_in_ms" field.
func ActionsExecutionStartInMsIsNil() predicate.TimingMetrics {
	return predicate.TimingMetrics(sql.FieldIsNull(FieldActionsExecutionStartInMs))
}

// ActionsExecutionStartInMsNotNil applies the NotNil predicate on the "actions_execution_start_in_ms" field.
func ActionsExecutionStartInMsNotNil() predicate.TimingMetrics {
	return predicate.TimingMetrics(sql.FieldNotNull(FieldActionsExecutionStartInMs))
}

// HasMetrics applies the HasEdge predicate on the "metrics" edge.
func HasMetrics() predicate.TimingMetrics {
	return predicate.TimingMetrics(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2M, true, MetricsTable, MetricsPrimaryKey...),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasMetricsWith applies the HasEdge predicate on the "metrics" edge with a given conditions (other predicates).
func HasMetricsWith(preds ...predicate.Metrics) predicate.TimingMetrics {
	return predicate.TimingMetrics(func(s *sql.Selector) {
		step := newMetricsStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.TimingMetrics) predicate.TimingMetrics {
	return predicate.TimingMetrics(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.TimingMetrics) predicate.TimingMetrics {
	return predicate.TimingMetrics(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.TimingMetrics) predicate.TimingMetrics {
	return predicate.TimingMetrics(sql.NotPredicates(p))
}
