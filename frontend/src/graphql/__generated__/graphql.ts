/* eslint-disable */
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';
export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
export type MakeEmpty<T extends { [key: string]: unknown }, K extends keyof T> = { [_ in K]?: never };
export type Incremental<T> = T | { [P in keyof T]?: P extends ' $fragmentName' | '__typename' ? T[P] : never };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: { input: string; output: string; }
  String: { input: string; output: string; }
  Boolean: { input: boolean; output: boolean; }
  Int: { input: number; output: number; }
  Float: { input: number; output: number; }
  /**
   * Define a Relay Cursor type:
   * https://relay.dev/graphql/connections.htm#sec-Cursor
   */
  Cursor: { input: any; output: any; }
  /** The builtin Time type */
  Time: { input: any; output: any; }
  UUID: { input: any; output: any; }
};

export type ActionCacheStatistics = Node & {
  __typename?: 'ActionCacheStatistics';
  actionSummary?: Maybe<Array<ActionSummary>>;
  hits?: Maybe<Scalars['Int']['output']>;
  id: Scalars['ID']['output'];
  loadTimeInMs?: Maybe<Scalars['Int']['output']>;
  missDetails?: Maybe<Array<MissDetail>>;
  misses?: Maybe<Scalars['Int']['output']>;
  saveTimeInMs?: Maybe<Scalars['Int']['output']>;
  sizeInBytes?: Maybe<Scalars['Int']['output']>;
};

/**
 * ActionCacheStatisticsWhereInput is used for filtering ActionCacheStatistics objects.
 * Input was generated by ent.
 */
export type ActionCacheStatisticsWhereInput = {
  and?: InputMaybe<Array<ActionCacheStatisticsWhereInput>>;
  /** action_summary edge predicates */
  hasActionSummary?: InputMaybe<Scalars['Boolean']['input']>;
  hasActionSummaryWith?: InputMaybe<Array<ActionSummaryWhereInput>>;
  /** miss_details edge predicates */
  hasMissDetails?: InputMaybe<Scalars['Boolean']['input']>;
  hasMissDetailsWith?: InputMaybe<Array<MissDetailWhereInput>>;
  /** hits field predicates */
  hits?: InputMaybe<Scalars['Int']['input']>;
  hitsGT?: InputMaybe<Scalars['Int']['input']>;
  hitsGTE?: InputMaybe<Scalars['Int']['input']>;
  hitsIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  hitsIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  hitsLT?: InputMaybe<Scalars['Int']['input']>;
  hitsLTE?: InputMaybe<Scalars['Int']['input']>;
  hitsNEQ?: InputMaybe<Scalars['Int']['input']>;
  hitsNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  hitsNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** load_time_in_ms field predicates */
  loadTimeInMs?: InputMaybe<Scalars['Int']['input']>;
  loadTimeInMsGT?: InputMaybe<Scalars['Int']['input']>;
  loadTimeInMsGTE?: InputMaybe<Scalars['Int']['input']>;
  loadTimeInMsIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  loadTimeInMsIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  loadTimeInMsLT?: InputMaybe<Scalars['Int']['input']>;
  loadTimeInMsLTE?: InputMaybe<Scalars['Int']['input']>;
  loadTimeInMsNEQ?: InputMaybe<Scalars['Int']['input']>;
  loadTimeInMsNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  loadTimeInMsNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** misses field predicates */
  misses?: InputMaybe<Scalars['Int']['input']>;
  missesGT?: InputMaybe<Scalars['Int']['input']>;
  missesGTE?: InputMaybe<Scalars['Int']['input']>;
  missesIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  missesIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  missesLT?: InputMaybe<Scalars['Int']['input']>;
  missesLTE?: InputMaybe<Scalars['Int']['input']>;
  missesNEQ?: InputMaybe<Scalars['Int']['input']>;
  missesNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  missesNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  not?: InputMaybe<ActionCacheStatisticsWhereInput>;
  or?: InputMaybe<Array<ActionCacheStatisticsWhereInput>>;
  /** save_time_in_ms field predicates */
  saveTimeInMs?: InputMaybe<Scalars['Int']['input']>;
  saveTimeInMsGT?: InputMaybe<Scalars['Int']['input']>;
  saveTimeInMsGTE?: InputMaybe<Scalars['Int']['input']>;
  saveTimeInMsIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  saveTimeInMsIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  saveTimeInMsLT?: InputMaybe<Scalars['Int']['input']>;
  saveTimeInMsLTE?: InputMaybe<Scalars['Int']['input']>;
  saveTimeInMsNEQ?: InputMaybe<Scalars['Int']['input']>;
  saveTimeInMsNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  saveTimeInMsNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** size_in_bytes field predicates */
  sizeInBytes?: InputMaybe<Scalars['Int']['input']>;
  sizeInBytesGT?: InputMaybe<Scalars['Int']['input']>;
  sizeInBytesGTE?: InputMaybe<Scalars['Int']['input']>;
  sizeInBytesIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  sizeInBytesIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  sizeInBytesLT?: InputMaybe<Scalars['Int']['input']>;
  sizeInBytesLTE?: InputMaybe<Scalars['Int']['input']>;
  sizeInBytesNEQ?: InputMaybe<Scalars['Int']['input']>;
  sizeInBytesNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  sizeInBytesNotNil?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ActionData = Node & {
  __typename?: 'ActionData';
  actionSummary?: Maybe<Array<ActionSummary>>;
  actionsCreated?: Maybe<Scalars['Int']['output']>;
  actionsExecuted?: Maybe<Scalars['Int']['output']>;
  firstStartedMs?: Maybe<Scalars['Int']['output']>;
  id: Scalars['ID']['output'];
  lastEndedMs?: Maybe<Scalars['Int']['output']>;
  mnemonic?: Maybe<Scalars['String']['output']>;
  systemTime?: Maybe<Scalars['Int']['output']>;
  userTime?: Maybe<Scalars['Int']['output']>;
};

/**
 * ActionDataWhereInput is used for filtering ActionData objects.
 * Input was generated by ent.
 */
export type ActionDataWhereInput = {
  /** actions_created field predicates */
  actionsCreated?: InputMaybe<Scalars['Int']['input']>;
  actionsCreatedGT?: InputMaybe<Scalars['Int']['input']>;
  actionsCreatedGTE?: InputMaybe<Scalars['Int']['input']>;
  actionsCreatedIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  actionsCreatedIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  actionsCreatedLT?: InputMaybe<Scalars['Int']['input']>;
  actionsCreatedLTE?: InputMaybe<Scalars['Int']['input']>;
  actionsCreatedNEQ?: InputMaybe<Scalars['Int']['input']>;
  actionsCreatedNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  actionsCreatedNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** actions_executed field predicates */
  actionsExecuted?: InputMaybe<Scalars['Int']['input']>;
  actionsExecutedGT?: InputMaybe<Scalars['Int']['input']>;
  actionsExecutedGTE?: InputMaybe<Scalars['Int']['input']>;
  actionsExecutedIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  actionsExecutedIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  actionsExecutedLT?: InputMaybe<Scalars['Int']['input']>;
  actionsExecutedLTE?: InputMaybe<Scalars['Int']['input']>;
  actionsExecutedNEQ?: InputMaybe<Scalars['Int']['input']>;
  actionsExecutedNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  actionsExecutedNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  and?: InputMaybe<Array<ActionDataWhereInput>>;
  /** first_started_ms field predicates */
  firstStartedMs?: InputMaybe<Scalars['Int']['input']>;
  firstStartedMsGT?: InputMaybe<Scalars['Int']['input']>;
  firstStartedMsGTE?: InputMaybe<Scalars['Int']['input']>;
  firstStartedMsIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  firstStartedMsIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  firstStartedMsLT?: InputMaybe<Scalars['Int']['input']>;
  firstStartedMsLTE?: InputMaybe<Scalars['Int']['input']>;
  firstStartedMsNEQ?: InputMaybe<Scalars['Int']['input']>;
  firstStartedMsNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  firstStartedMsNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** action_summary edge predicates */
  hasActionSummary?: InputMaybe<Scalars['Boolean']['input']>;
  hasActionSummaryWith?: InputMaybe<Array<ActionSummaryWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** last_ended_ms field predicates */
  lastEndedMs?: InputMaybe<Scalars['Int']['input']>;
  lastEndedMsGT?: InputMaybe<Scalars['Int']['input']>;
  lastEndedMsGTE?: InputMaybe<Scalars['Int']['input']>;
  lastEndedMsIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  lastEndedMsIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  lastEndedMsLT?: InputMaybe<Scalars['Int']['input']>;
  lastEndedMsLTE?: InputMaybe<Scalars['Int']['input']>;
  lastEndedMsNEQ?: InputMaybe<Scalars['Int']['input']>;
  lastEndedMsNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  lastEndedMsNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** mnemonic field predicates */
  mnemonic?: InputMaybe<Scalars['String']['input']>;
  mnemonicContains?: InputMaybe<Scalars['String']['input']>;
  mnemonicContainsFold?: InputMaybe<Scalars['String']['input']>;
  mnemonicEqualFold?: InputMaybe<Scalars['String']['input']>;
  mnemonicGT?: InputMaybe<Scalars['String']['input']>;
  mnemonicGTE?: InputMaybe<Scalars['String']['input']>;
  mnemonicHasPrefix?: InputMaybe<Scalars['String']['input']>;
  mnemonicHasSuffix?: InputMaybe<Scalars['String']['input']>;
  mnemonicIn?: InputMaybe<Array<Scalars['String']['input']>>;
  mnemonicIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  mnemonicLT?: InputMaybe<Scalars['String']['input']>;
  mnemonicLTE?: InputMaybe<Scalars['String']['input']>;
  mnemonicNEQ?: InputMaybe<Scalars['String']['input']>;
  mnemonicNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  mnemonicNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  not?: InputMaybe<ActionDataWhereInput>;
  or?: InputMaybe<Array<ActionDataWhereInput>>;
  /** system_time field predicates */
  systemTime?: InputMaybe<Scalars['Int']['input']>;
  systemTimeGT?: InputMaybe<Scalars['Int']['input']>;
  systemTimeGTE?: InputMaybe<Scalars['Int']['input']>;
  systemTimeIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  systemTimeIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  systemTimeLT?: InputMaybe<Scalars['Int']['input']>;
  systemTimeLTE?: InputMaybe<Scalars['Int']['input']>;
  systemTimeNEQ?: InputMaybe<Scalars['Int']['input']>;
  systemTimeNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  systemTimeNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** user_time field predicates */
  userTime?: InputMaybe<Scalars['Int']['input']>;
  userTimeGT?: InputMaybe<Scalars['Int']['input']>;
  userTimeGTE?: InputMaybe<Scalars['Int']['input']>;
  userTimeIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  userTimeIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  userTimeLT?: InputMaybe<Scalars['Int']['input']>;
  userTimeLTE?: InputMaybe<Scalars['Int']['input']>;
  userTimeNEQ?: InputMaybe<Scalars['Int']['input']>;
  userTimeNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  userTimeNotNil?: InputMaybe<Scalars['Boolean']['input']>;
};

export enum ActionOutputStatus {
  Available = 'AVAILABLE',
  Processing = 'PROCESSING',
  Unavailable = 'UNAVAILABLE'
}

export type ActionProblem = Node & Problem & {
  __typename?: 'ActionProblem';
  id: Scalars['ID']['output'];
  label: Scalars['String']['output'];
  stderr?: Maybe<BlobReference>;
  stdout?: Maybe<BlobReference>;
  type: Scalars['String']['output'];
};

export type ActionSummary = Node & {
  __typename?: 'ActionSummary';
  actionCacheStatistics?: Maybe<Array<ActionCacheStatistics>>;
  actionData?: Maybe<Array<ActionData>>;
  actionsCreated?: Maybe<Scalars['Int']['output']>;
  actionsCreatedNotIncludingAspects?: Maybe<Scalars['Int']['output']>;
  actionsExecuted?: Maybe<Scalars['Int']['output']>;
  id: Scalars['ID']['output'];
  metrics?: Maybe<Metrics>;
  remoteCacheHits?: Maybe<Scalars['Int']['output']>;
  runnerCount?: Maybe<Array<RunnerCount>>;
};

/**
 * ActionSummaryWhereInput is used for filtering ActionSummary objects.
 * Input was generated by ent.
 */
export type ActionSummaryWhereInput = {
  /** actions_created field predicates */
  actionsCreated?: InputMaybe<Scalars['Int']['input']>;
  actionsCreatedGT?: InputMaybe<Scalars['Int']['input']>;
  actionsCreatedGTE?: InputMaybe<Scalars['Int']['input']>;
  actionsCreatedIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  actionsCreatedIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  actionsCreatedLT?: InputMaybe<Scalars['Int']['input']>;
  actionsCreatedLTE?: InputMaybe<Scalars['Int']['input']>;
  actionsCreatedNEQ?: InputMaybe<Scalars['Int']['input']>;
  actionsCreatedNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  /** actions_created_not_including_aspects field predicates */
  actionsCreatedNotIncludingAspects?: InputMaybe<Scalars['Int']['input']>;
  actionsCreatedNotIncludingAspectsGT?: InputMaybe<Scalars['Int']['input']>;
  actionsCreatedNotIncludingAspectsGTE?: InputMaybe<Scalars['Int']['input']>;
  actionsCreatedNotIncludingAspectsIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  actionsCreatedNotIncludingAspectsIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  actionsCreatedNotIncludingAspectsLT?: InputMaybe<Scalars['Int']['input']>;
  actionsCreatedNotIncludingAspectsLTE?: InputMaybe<Scalars['Int']['input']>;
  actionsCreatedNotIncludingAspectsNEQ?: InputMaybe<Scalars['Int']['input']>;
  actionsCreatedNotIncludingAspectsNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  actionsCreatedNotIncludingAspectsNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  actionsCreatedNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** actions_executed field predicates */
  actionsExecuted?: InputMaybe<Scalars['Int']['input']>;
  actionsExecutedGT?: InputMaybe<Scalars['Int']['input']>;
  actionsExecutedGTE?: InputMaybe<Scalars['Int']['input']>;
  actionsExecutedIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  actionsExecutedIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  actionsExecutedLT?: InputMaybe<Scalars['Int']['input']>;
  actionsExecutedLTE?: InputMaybe<Scalars['Int']['input']>;
  actionsExecutedNEQ?: InputMaybe<Scalars['Int']['input']>;
  actionsExecutedNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  actionsExecutedNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  and?: InputMaybe<Array<ActionSummaryWhereInput>>;
  /** action_cache_statistics edge predicates */
  hasActionCacheStatistics?: InputMaybe<Scalars['Boolean']['input']>;
  hasActionCacheStatisticsWith?: InputMaybe<Array<ActionCacheStatisticsWhereInput>>;
  /** action_data edge predicates */
  hasActionData?: InputMaybe<Scalars['Boolean']['input']>;
  hasActionDataWith?: InputMaybe<Array<ActionDataWhereInput>>;
  /** metrics edge predicates */
  hasMetrics?: InputMaybe<Scalars['Boolean']['input']>;
  hasMetricsWith?: InputMaybe<Array<MetricsWhereInput>>;
  /** runner_count edge predicates */
  hasRunnerCount?: InputMaybe<Scalars['Boolean']['input']>;
  hasRunnerCountWith?: InputMaybe<Array<RunnerCountWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<ActionSummaryWhereInput>;
  or?: InputMaybe<Array<ActionSummaryWhereInput>>;
  /** remote_cache_hits field predicates */
  remoteCacheHits?: InputMaybe<Scalars['Int']['input']>;
  remoteCacheHitsGT?: InputMaybe<Scalars['Int']['input']>;
  remoteCacheHitsGTE?: InputMaybe<Scalars['Int']['input']>;
  remoteCacheHitsIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  remoteCacheHitsIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  remoteCacheHitsLT?: InputMaybe<Scalars['Int']['input']>;
  remoteCacheHitsLTE?: InputMaybe<Scalars['Int']['input']>;
  remoteCacheHitsNEQ?: InputMaybe<Scalars['Int']['input']>;
  remoteCacheHitsNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  remoteCacheHitsNotNil?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ArtifactMetrics = Node & {
  __typename?: 'ArtifactMetrics';
  id: Scalars['ID']['output'];
  metrics?: Maybe<Array<Metrics>>;
  outputArtifactsFromActionCache?: Maybe<Array<FilesMetric>>;
  outputArtifactsSeen?: Maybe<Array<FilesMetric>>;
  sourceArtifactsRead?: Maybe<Array<FilesMetric>>;
  topLevelArtifacts?: Maybe<Array<FilesMetric>>;
};

/**
 * ArtifactMetricsWhereInput is used for filtering ArtifactMetrics objects.
 * Input was generated by ent.
 */
export type ArtifactMetricsWhereInput = {
  and?: InputMaybe<Array<ArtifactMetricsWhereInput>>;
  /** metrics edge predicates */
  hasMetrics?: InputMaybe<Scalars['Boolean']['input']>;
  hasMetricsWith?: InputMaybe<Array<MetricsWhereInput>>;
  /** output_artifacts_from_action_cache edge predicates */
  hasOutputArtifactsFromActionCache?: InputMaybe<Scalars['Boolean']['input']>;
  hasOutputArtifactsFromActionCacheWith?: InputMaybe<Array<FilesMetricWhereInput>>;
  /** output_artifacts_seen edge predicates */
  hasOutputArtifactsSeen?: InputMaybe<Scalars['Boolean']['input']>;
  hasOutputArtifactsSeenWith?: InputMaybe<Array<FilesMetricWhereInput>>;
  /** source_artifacts_read edge predicates */
  hasSourceArtifactsRead?: InputMaybe<Scalars['Boolean']['input']>;
  hasSourceArtifactsReadWith?: InputMaybe<Array<FilesMetricWhereInput>>;
  /** top_level_artifacts edge predicates */
  hasTopLevelArtifacts?: InputMaybe<Scalars['Boolean']['input']>;
  hasTopLevelArtifactsWith?: InputMaybe<Array<FilesMetricWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<ArtifactMetricsWhereInput>;
  or?: InputMaybe<Array<ArtifactMetricsWhereInput>>;
};

export type BazelCommand = {
  __typename?: 'BazelCommand';
  command: Scalars['String']['output'];
  executable: Scalars['String']['output'];
  id: Scalars['ID']['output'];
  options: Scalars['String']['output'];
  residual: Scalars['String']['output'];
};

export type BazelInvocation = Node & {
  __typename?: 'BazelInvocation';
  bazelCommand: BazelCommand;
  bepCompleted?: Maybe<Scalars['Boolean']['output']>;
  build?: Maybe<Build>;
  buildLogs?: Maybe<Scalars['String']['output']>;
  changeNumber?: Maybe<Scalars['Int']['output']>;
  endedAt?: Maybe<Scalars['Time']['output']>;
  eventFile: EventFile;
  id: Scalars['ID']['output'];
  invocationID: Scalars['UUID']['output'];
  metrics?: Maybe<Metrics>;
  patchsetNumber?: Maybe<Scalars['Int']['output']>;
  problems: Array<Problem>;
  relatedFiles: Array<NamedFile>;
  startedAt: Scalars['Time']['output'];
  state: BazelInvocationState;
  stepLabel: Scalars['String']['output'];
  user?: Maybe<User>;
  userEmail?: Maybe<Scalars['String']['output']>;
  userLdap?: Maybe<Scalars['String']['output']>;
};

/** A connection to a list of items. */
export type BazelInvocationConnection = {
  __typename?: 'BazelInvocationConnection';
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<BazelInvocationEdge>>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output'];
};

/** An edge in a connection. */
export type BazelInvocationEdge = {
  __typename?: 'BazelInvocationEdge';
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output'];
  /** The item at the end of the edge. */
  node?: Maybe<BazelInvocation>;
};

export type BazelInvocationProblem = Node & {
  __typename?: 'BazelInvocationProblem';
  bazelInvocation?: Maybe<BazelInvocation>;
  id: Scalars['ID']['output'];
  label: Scalars['String']['output'];
  problemType: Scalars['String']['output'];
};

/**
 * BazelInvocationProblemWhereInput is used for filtering BazelInvocationProblem objects.
 * Input was generated by ent.
 */
export type BazelInvocationProblemWhereInput = {
  and?: InputMaybe<Array<BazelInvocationProblemWhereInput>>;
  /** bazel_invocation edge predicates */
  hasBazelInvocation?: InputMaybe<Scalars['Boolean']['input']>;
  hasBazelInvocationWith?: InputMaybe<Array<BazelInvocationWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** label field predicates */
  label?: InputMaybe<Scalars['String']['input']>;
  labelContains?: InputMaybe<Scalars['String']['input']>;
  labelContainsFold?: InputMaybe<Scalars['String']['input']>;
  labelEqualFold?: InputMaybe<Scalars['String']['input']>;
  labelGT?: InputMaybe<Scalars['String']['input']>;
  labelGTE?: InputMaybe<Scalars['String']['input']>;
  labelHasPrefix?: InputMaybe<Scalars['String']['input']>;
  labelHasSuffix?: InputMaybe<Scalars['String']['input']>;
  labelIn?: InputMaybe<Array<Scalars['String']['input']>>;
  labelLT?: InputMaybe<Scalars['String']['input']>;
  labelLTE?: InputMaybe<Scalars['String']['input']>;
  labelNEQ?: InputMaybe<Scalars['String']['input']>;
  labelNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  not?: InputMaybe<BazelInvocationProblemWhereInput>;
  or?: InputMaybe<Array<BazelInvocationProblemWhereInput>>;
  /** problem_type field predicates */
  problemType?: InputMaybe<Scalars['String']['input']>;
  problemTypeContains?: InputMaybe<Scalars['String']['input']>;
  problemTypeContainsFold?: InputMaybe<Scalars['String']['input']>;
  problemTypeEqualFold?: InputMaybe<Scalars['String']['input']>;
  problemTypeGT?: InputMaybe<Scalars['String']['input']>;
  problemTypeGTE?: InputMaybe<Scalars['String']['input']>;
  problemTypeHasPrefix?: InputMaybe<Scalars['String']['input']>;
  problemTypeHasSuffix?: InputMaybe<Scalars['String']['input']>;
  problemTypeIn?: InputMaybe<Array<Scalars['String']['input']>>;
  problemTypeLT?: InputMaybe<Scalars['String']['input']>;
  problemTypeLTE?: InputMaybe<Scalars['String']['input']>;
  problemTypeNEQ?: InputMaybe<Scalars['String']['input']>;
  problemTypeNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
};

export type BazelInvocationState = {
  __typename?: 'BazelInvocationState';
  bepCompleted: Scalars['Boolean']['output'];
  buildEndTime: Scalars['Time']['output'];
  buildStartTime: Scalars['Time']['output'];
  exitCode?: Maybe<ExitCode>;
  id: Scalars['ID']['output'];
};

/**
 * BazelInvocationWhereInput is used for filtering BazelInvocation objects.
 * Input was generated by ent.
 */
export type BazelInvocationWhereInput = {
  and?: InputMaybe<Array<BazelInvocationWhereInput>>;
  /** bep_completed field predicates */
  bepCompleted?: InputMaybe<Scalars['Boolean']['input']>;
  bepCompletedIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  bepCompletedNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  bepCompletedNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** build_logs field predicates */
  buildLogs?: InputMaybe<Scalars['String']['input']>;
  buildLogsContains?: InputMaybe<Scalars['String']['input']>;
  buildLogsContainsFold?: InputMaybe<Scalars['String']['input']>;
  buildLogsEqualFold?: InputMaybe<Scalars['String']['input']>;
  buildLogsGT?: InputMaybe<Scalars['String']['input']>;
  buildLogsGTE?: InputMaybe<Scalars['String']['input']>;
  buildLogsHasPrefix?: InputMaybe<Scalars['String']['input']>;
  buildLogsHasSuffix?: InputMaybe<Scalars['String']['input']>;
  buildLogsIn?: InputMaybe<Array<Scalars['String']['input']>>;
  buildLogsIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  buildLogsLT?: InputMaybe<Scalars['String']['input']>;
  buildLogsLTE?: InputMaybe<Scalars['String']['input']>;
  buildLogsNEQ?: InputMaybe<Scalars['String']['input']>;
  buildLogsNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  buildLogsNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** change_number field predicates */
  changeNumber?: InputMaybe<Scalars['Int']['input']>;
  changeNumberGT?: InputMaybe<Scalars['Int']['input']>;
  changeNumberGTE?: InputMaybe<Scalars['Int']['input']>;
  changeNumberIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  changeNumberIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  changeNumberLT?: InputMaybe<Scalars['Int']['input']>;
  changeNumberLTE?: InputMaybe<Scalars['Int']['input']>;
  changeNumberNEQ?: InputMaybe<Scalars['Int']['input']>;
  changeNumberNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  changeNumberNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** ended_at field predicates */
  endedAt?: InputMaybe<Scalars['Time']['input']>;
  endedAtGT?: InputMaybe<Scalars['Time']['input']>;
  endedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  endedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  endedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  endedAtLT?: InputMaybe<Scalars['Time']['input']>;
  endedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  endedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  endedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  endedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** build edge predicates */
  hasBuild?: InputMaybe<Scalars['Boolean']['input']>;
  hasBuildWith?: InputMaybe<Array<BuildWhereInput>>;
  /** event_file edge predicates */
  hasEventFile?: InputMaybe<Scalars['Boolean']['input']>;
  hasEventFileWith?: InputMaybe<Array<EventFileWhereInput>>;
  /** metrics edge predicates */
  hasMetrics?: InputMaybe<Scalars['Boolean']['input']>;
  hasMetricsWith?: InputMaybe<Array<MetricsWhereInput>>;
  /** problems edge predicates */
  hasProblems?: InputMaybe<Scalars['Boolean']['input']>;
  hasProblemsWith?: InputMaybe<Array<BazelInvocationProblemWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** invocation_id field predicates */
  invocationID?: InputMaybe<Scalars['UUID']['input']>;
  invocationIDGT?: InputMaybe<Scalars['UUID']['input']>;
  invocationIDGTE?: InputMaybe<Scalars['UUID']['input']>;
  invocationIDIn?: InputMaybe<Array<Scalars['UUID']['input']>>;
  invocationIDLT?: InputMaybe<Scalars['UUID']['input']>;
  invocationIDLTE?: InputMaybe<Scalars['UUID']['input']>;
  invocationIDNEQ?: InputMaybe<Scalars['UUID']['input']>;
  invocationIDNotIn?: InputMaybe<Array<Scalars['UUID']['input']>>;
  not?: InputMaybe<BazelInvocationWhereInput>;
  or?: InputMaybe<Array<BazelInvocationWhereInput>>;
  /** patchset_number field predicates */
  patchsetNumber?: InputMaybe<Scalars['Int']['input']>;
  patchsetNumberGT?: InputMaybe<Scalars['Int']['input']>;
  patchsetNumberGTE?: InputMaybe<Scalars['Int']['input']>;
  patchsetNumberIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  patchsetNumberIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  patchsetNumberLT?: InputMaybe<Scalars['Int']['input']>;
  patchsetNumberLTE?: InputMaybe<Scalars['Int']['input']>;
  patchsetNumberNEQ?: InputMaybe<Scalars['Int']['input']>;
  patchsetNumberNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  patchsetNumberNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** started_at field predicates */
  startedAt?: InputMaybe<Scalars['Time']['input']>;
  startedAtGT?: InputMaybe<Scalars['Time']['input']>;
  startedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  startedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  startedAtLT?: InputMaybe<Scalars['Time']['input']>;
  startedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  startedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  startedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** step_label field predicates */
  stepLabel?: InputMaybe<Scalars['String']['input']>;
  stepLabelContains?: InputMaybe<Scalars['String']['input']>;
  stepLabelContainsFold?: InputMaybe<Scalars['String']['input']>;
  stepLabelEqualFold?: InputMaybe<Scalars['String']['input']>;
  stepLabelGT?: InputMaybe<Scalars['String']['input']>;
  stepLabelGTE?: InputMaybe<Scalars['String']['input']>;
  stepLabelHasPrefix?: InputMaybe<Scalars['String']['input']>;
  stepLabelHasSuffix?: InputMaybe<Scalars['String']['input']>;
  stepLabelIn?: InputMaybe<Array<Scalars['String']['input']>>;
  stepLabelLT?: InputMaybe<Scalars['String']['input']>;
  stepLabelLTE?: InputMaybe<Scalars['String']['input']>;
  stepLabelNEQ?: InputMaybe<Scalars['String']['input']>;
  stepLabelNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** user_email field predicates */
  userEmail?: InputMaybe<Scalars['String']['input']>;
  userEmailContains?: InputMaybe<Scalars['String']['input']>;
  userEmailContainsFold?: InputMaybe<Scalars['String']['input']>;
  userEmailEqualFold?: InputMaybe<Scalars['String']['input']>;
  userEmailGT?: InputMaybe<Scalars['String']['input']>;
  userEmailGTE?: InputMaybe<Scalars['String']['input']>;
  userEmailHasPrefix?: InputMaybe<Scalars['String']['input']>;
  userEmailHasSuffix?: InputMaybe<Scalars['String']['input']>;
  userEmailIn?: InputMaybe<Array<Scalars['String']['input']>>;
  userEmailIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  userEmailLT?: InputMaybe<Scalars['String']['input']>;
  userEmailLTE?: InputMaybe<Scalars['String']['input']>;
  userEmailNEQ?: InputMaybe<Scalars['String']['input']>;
  userEmailNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  userEmailNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** user_ldap field predicates */
  userLdap?: InputMaybe<Scalars['String']['input']>;
  userLdapContains?: InputMaybe<Scalars['String']['input']>;
  userLdapContainsFold?: InputMaybe<Scalars['String']['input']>;
  userLdapEqualFold?: InputMaybe<Scalars['String']['input']>;
  userLdapGT?: InputMaybe<Scalars['String']['input']>;
  userLdapGTE?: InputMaybe<Scalars['String']['input']>;
  userLdapHasPrefix?: InputMaybe<Scalars['String']['input']>;
  userLdapHasSuffix?: InputMaybe<Scalars['String']['input']>;
  userLdapIn?: InputMaybe<Array<Scalars['String']['input']>>;
  userLdapIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  userLdapLT?: InputMaybe<Scalars['String']['input']>;
  userLdapLTE?: InputMaybe<Scalars['String']['input']>;
  userLdapNEQ?: InputMaybe<Scalars['String']['input']>;
  userLdapNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  userLdapNotNil?: InputMaybe<Scalars['Boolean']['input']>;
};

export type Blob = Node & {
  __typename?: 'Blob';
  archiveURL?: Maybe<Scalars['String']['output']>;
  archivingStatus: BlobArchivingStatus;
  id: Scalars['ID']['output'];
  reason?: Maybe<Scalars['String']['output']>;
  sizeBytes?: Maybe<Scalars['Int']['output']>;
  uri: Scalars['String']['output'];
};

/** BlobArchivingStatus is enum for the field archiving_status */
export enum BlobArchivingStatus {
  Archiving = 'ARCHIVING',
  Failed = 'FAILED',
  Queued = 'QUEUED',
  Success = 'SUCCESS'
}

export type BlobReference = {
  __typename?: 'BlobReference';
  availabilityStatus: ActionOutputStatus;
  downloadURL: Scalars['String']['output'];
  name: Scalars['String']['output'];
  sizeInBytes?: Maybe<Scalars['Int']['output']>;
};

/**
 * BlobWhereInput is used for filtering Blob objects.
 * Input was generated by ent.
 */
export type BlobWhereInput = {
  and?: InputMaybe<Array<BlobWhereInput>>;
  /** archive_url field predicates */
  archiveURL?: InputMaybe<Scalars['String']['input']>;
  archiveURLContains?: InputMaybe<Scalars['String']['input']>;
  archiveURLContainsFold?: InputMaybe<Scalars['String']['input']>;
  archiveURLEqualFold?: InputMaybe<Scalars['String']['input']>;
  archiveURLGT?: InputMaybe<Scalars['String']['input']>;
  archiveURLGTE?: InputMaybe<Scalars['String']['input']>;
  archiveURLHasPrefix?: InputMaybe<Scalars['String']['input']>;
  archiveURLHasSuffix?: InputMaybe<Scalars['String']['input']>;
  archiveURLIn?: InputMaybe<Array<Scalars['String']['input']>>;
  archiveURLIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  archiveURLLT?: InputMaybe<Scalars['String']['input']>;
  archiveURLLTE?: InputMaybe<Scalars['String']['input']>;
  archiveURLNEQ?: InputMaybe<Scalars['String']['input']>;
  archiveURLNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  archiveURLNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** archiving_status field predicates */
  archivingStatus?: InputMaybe<BlobArchivingStatus>;
  archivingStatusIn?: InputMaybe<Array<BlobArchivingStatus>>;
  archivingStatusNEQ?: InputMaybe<BlobArchivingStatus>;
  archivingStatusNotIn?: InputMaybe<Array<BlobArchivingStatus>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<BlobWhereInput>;
  or?: InputMaybe<Array<BlobWhereInput>>;
  /** reason field predicates */
  reason?: InputMaybe<Scalars['String']['input']>;
  reasonContains?: InputMaybe<Scalars['String']['input']>;
  reasonContainsFold?: InputMaybe<Scalars['String']['input']>;
  reasonEqualFold?: InputMaybe<Scalars['String']['input']>;
  reasonGT?: InputMaybe<Scalars['String']['input']>;
  reasonGTE?: InputMaybe<Scalars['String']['input']>;
  reasonHasPrefix?: InputMaybe<Scalars['String']['input']>;
  reasonHasSuffix?: InputMaybe<Scalars['String']['input']>;
  reasonIn?: InputMaybe<Array<Scalars['String']['input']>>;
  reasonIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  reasonLT?: InputMaybe<Scalars['String']['input']>;
  reasonLTE?: InputMaybe<Scalars['String']['input']>;
  reasonNEQ?: InputMaybe<Scalars['String']['input']>;
  reasonNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  reasonNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** size_bytes field predicates */
  sizeBytes?: InputMaybe<Scalars['Int']['input']>;
  sizeBytesGT?: InputMaybe<Scalars['Int']['input']>;
  sizeBytesGTE?: InputMaybe<Scalars['Int']['input']>;
  sizeBytesIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  sizeBytesIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  sizeBytesLT?: InputMaybe<Scalars['Int']['input']>;
  sizeBytesLTE?: InputMaybe<Scalars['Int']['input']>;
  sizeBytesNEQ?: InputMaybe<Scalars['Int']['input']>;
  sizeBytesNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  sizeBytesNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** uri field predicates */
  uri?: InputMaybe<Scalars['String']['input']>;
  uriContains?: InputMaybe<Scalars['String']['input']>;
  uriContainsFold?: InputMaybe<Scalars['String']['input']>;
  uriEqualFold?: InputMaybe<Scalars['String']['input']>;
  uriGT?: InputMaybe<Scalars['String']['input']>;
  uriGTE?: InputMaybe<Scalars['String']['input']>;
  uriHasPrefix?: InputMaybe<Scalars['String']['input']>;
  uriHasSuffix?: InputMaybe<Scalars['String']['input']>;
  uriIn?: InputMaybe<Array<Scalars['String']['input']>>;
  uriLT?: InputMaybe<Scalars['String']['input']>;
  uriLTE?: InputMaybe<Scalars['String']['input']>;
  uriNEQ?: InputMaybe<Scalars['String']['input']>;
  uriNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
};

export type Build = Node & {
  __typename?: 'Build';
  buildURL: Scalars['String']['output'];
  buildUUID: Scalars['UUID']['output'];
  env: Array<EnvVar>;
  id: Scalars['ID']['output'];
  invocations?: Maybe<Array<BazelInvocation>>;
};

/** A connection to a list of items. */
export type BuildConnection = {
  __typename?: 'BuildConnection';
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<BuildEdge>>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output'];
};

/** An edge in a connection. */
export type BuildEdge = {
  __typename?: 'BuildEdge';
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output'];
  /** The item at the end of the edge. */
  node?: Maybe<Build>;
};

export type BuildStep = {
  buildStepStatus: BuildStepStatus;
  id: Scalars['ID']['output'];
  stepLabel: Scalars['String']['output'];
};

export enum BuildStepStatus {
  Cancelled = 'Cancelled',
  Failed = 'Failed',
  Successful = 'Successful',
  Unknown = 'Unknown'
}

/**
 * BuildWhereInput is used for filtering Build objects.
 * Input was generated by ent.
 */
export type BuildWhereInput = {
  and?: InputMaybe<Array<BuildWhereInput>>;
  /** build_url field predicates */
  buildURL?: InputMaybe<Scalars['String']['input']>;
  buildURLContains?: InputMaybe<Scalars['String']['input']>;
  buildURLContainsFold?: InputMaybe<Scalars['String']['input']>;
  buildURLEqualFold?: InputMaybe<Scalars['String']['input']>;
  buildURLGT?: InputMaybe<Scalars['String']['input']>;
  buildURLGTE?: InputMaybe<Scalars['String']['input']>;
  buildURLHasPrefix?: InputMaybe<Scalars['String']['input']>;
  buildURLHasSuffix?: InputMaybe<Scalars['String']['input']>;
  buildURLIn?: InputMaybe<Array<Scalars['String']['input']>>;
  buildURLLT?: InputMaybe<Scalars['String']['input']>;
  buildURLLTE?: InputMaybe<Scalars['String']['input']>;
  buildURLNEQ?: InputMaybe<Scalars['String']['input']>;
  buildURLNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** build_uuid field predicates */
  buildUUID?: InputMaybe<Scalars['UUID']['input']>;
  buildUUIDGT?: InputMaybe<Scalars['UUID']['input']>;
  buildUUIDGTE?: InputMaybe<Scalars['UUID']['input']>;
  buildUUIDIn?: InputMaybe<Array<Scalars['UUID']['input']>>;
  buildUUIDLT?: InputMaybe<Scalars['UUID']['input']>;
  buildUUIDLTE?: InputMaybe<Scalars['UUID']['input']>;
  buildUUIDNEQ?: InputMaybe<Scalars['UUID']['input']>;
  buildUUIDNotIn?: InputMaybe<Array<Scalars['UUID']['input']>>;
  /** invocations edge predicates */
  hasInvocations?: InputMaybe<Scalars['Boolean']['input']>;
  hasInvocationsWith?: InputMaybe<Array<BazelInvocationWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<BuildWhereInput>;
  or?: InputMaybe<Array<BuildWhereInput>>;
};

export type CumulativeMetrics = Node & {
  __typename?: 'CumulativeMetrics';
  id: Scalars['ID']['output'];
  metrics?: Maybe<Array<Metrics>>;
  numAnalyses?: Maybe<Scalars['Int']['output']>;
  numBuilds?: Maybe<Scalars['Int']['output']>;
};

/**
 * CumulativeMetricsWhereInput is used for filtering CumulativeMetrics objects.
 * Input was generated by ent.
 */
export type CumulativeMetricsWhereInput = {
  and?: InputMaybe<Array<CumulativeMetricsWhereInput>>;
  /** metrics edge predicates */
  hasMetrics?: InputMaybe<Scalars['Boolean']['input']>;
  hasMetricsWith?: InputMaybe<Array<MetricsWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<CumulativeMetricsWhereInput>;
  /** num_analyses field predicates */
  numAnalyses?: InputMaybe<Scalars['Int']['input']>;
  numAnalysesGT?: InputMaybe<Scalars['Int']['input']>;
  numAnalysesGTE?: InputMaybe<Scalars['Int']['input']>;
  numAnalysesIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  numAnalysesIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  numAnalysesLT?: InputMaybe<Scalars['Int']['input']>;
  numAnalysesLTE?: InputMaybe<Scalars['Int']['input']>;
  numAnalysesNEQ?: InputMaybe<Scalars['Int']['input']>;
  numAnalysesNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  numAnalysesNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** num_builds field predicates */
  numBuilds?: InputMaybe<Scalars['Int']['input']>;
  numBuildsGT?: InputMaybe<Scalars['Int']['input']>;
  numBuildsGTE?: InputMaybe<Scalars['Int']['input']>;
  numBuildsIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  numBuildsIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  numBuildsLT?: InputMaybe<Scalars['Int']['input']>;
  numBuildsLTE?: InputMaybe<Scalars['Int']['input']>;
  numBuildsNEQ?: InputMaybe<Scalars['Int']['input']>;
  numBuildsNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  numBuildsNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  or?: InputMaybe<Array<CumulativeMetricsWhereInput>>;
};

export type DynamicExecutionMetrics = Node & {
  __typename?: 'DynamicExecutionMetrics';
  id: Scalars['ID']['output'];
  metrics?: Maybe<Array<Metrics>>;
  raceStatistics?: Maybe<Array<RaceStatistics>>;
};

/**
 * DynamicExecutionMetricsWhereInput is used for filtering DynamicExecutionMetrics objects.
 * Input was generated by ent.
 */
export type DynamicExecutionMetricsWhereInput = {
  and?: InputMaybe<Array<DynamicExecutionMetricsWhereInput>>;
  /** metrics edge predicates */
  hasMetrics?: InputMaybe<Scalars['Boolean']['input']>;
  hasMetricsWith?: InputMaybe<Array<MetricsWhereInput>>;
  /** race_statistics edge predicates */
  hasRaceStatistics?: InputMaybe<Scalars['Boolean']['input']>;
  hasRaceStatisticsWith?: InputMaybe<Array<RaceStatisticsWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<DynamicExecutionMetricsWhereInput>;
  or?: InputMaybe<Array<DynamicExecutionMetricsWhereInput>>;
};

export type EnvVar = {
  __typename?: 'EnvVar';
  key: Scalars['String']['output'];
  value: Scalars['String']['output'];
};

export type EventFile = Node & {
  __typename?: 'EventFile';
  bazelInvocation?: Maybe<BazelInvocation>;
  id: Scalars['ID']['output'];
  mimeType: Scalars['String']['output'];
  modTime: Scalars['Time']['output'];
  protocol: Scalars['String']['output'];
  reason?: Maybe<Scalars['String']['output']>;
  status: Scalars['String']['output'];
  url: Scalars['String']['output'];
};

/**
 * EventFileWhereInput is used for filtering EventFile objects.
 * Input was generated by ent.
 */
export type EventFileWhereInput = {
  and?: InputMaybe<Array<EventFileWhereInput>>;
  /** bazel_invocation edge predicates */
  hasBazelInvocation?: InputMaybe<Scalars['Boolean']['input']>;
  hasBazelInvocationWith?: InputMaybe<Array<BazelInvocationWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** mime_type field predicates */
  mimeType?: InputMaybe<Scalars['String']['input']>;
  mimeTypeContains?: InputMaybe<Scalars['String']['input']>;
  mimeTypeContainsFold?: InputMaybe<Scalars['String']['input']>;
  mimeTypeEqualFold?: InputMaybe<Scalars['String']['input']>;
  mimeTypeGT?: InputMaybe<Scalars['String']['input']>;
  mimeTypeGTE?: InputMaybe<Scalars['String']['input']>;
  mimeTypeHasPrefix?: InputMaybe<Scalars['String']['input']>;
  mimeTypeHasSuffix?: InputMaybe<Scalars['String']['input']>;
  mimeTypeIn?: InputMaybe<Array<Scalars['String']['input']>>;
  mimeTypeLT?: InputMaybe<Scalars['String']['input']>;
  mimeTypeLTE?: InputMaybe<Scalars['String']['input']>;
  mimeTypeNEQ?: InputMaybe<Scalars['String']['input']>;
  mimeTypeNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** mod_time field predicates */
  modTime?: InputMaybe<Scalars['Time']['input']>;
  modTimeGT?: InputMaybe<Scalars['Time']['input']>;
  modTimeGTE?: InputMaybe<Scalars['Time']['input']>;
  modTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  modTimeLT?: InputMaybe<Scalars['Time']['input']>;
  modTimeLTE?: InputMaybe<Scalars['Time']['input']>;
  modTimeNEQ?: InputMaybe<Scalars['Time']['input']>;
  modTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  not?: InputMaybe<EventFileWhereInput>;
  or?: InputMaybe<Array<EventFileWhereInput>>;
  /** protocol field predicates */
  protocol?: InputMaybe<Scalars['String']['input']>;
  protocolContains?: InputMaybe<Scalars['String']['input']>;
  protocolContainsFold?: InputMaybe<Scalars['String']['input']>;
  protocolEqualFold?: InputMaybe<Scalars['String']['input']>;
  protocolGT?: InputMaybe<Scalars['String']['input']>;
  protocolGTE?: InputMaybe<Scalars['String']['input']>;
  protocolHasPrefix?: InputMaybe<Scalars['String']['input']>;
  protocolHasSuffix?: InputMaybe<Scalars['String']['input']>;
  protocolIn?: InputMaybe<Array<Scalars['String']['input']>>;
  protocolLT?: InputMaybe<Scalars['String']['input']>;
  protocolLTE?: InputMaybe<Scalars['String']['input']>;
  protocolNEQ?: InputMaybe<Scalars['String']['input']>;
  protocolNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** reason field predicates */
  reason?: InputMaybe<Scalars['String']['input']>;
  reasonContains?: InputMaybe<Scalars['String']['input']>;
  reasonContainsFold?: InputMaybe<Scalars['String']['input']>;
  reasonEqualFold?: InputMaybe<Scalars['String']['input']>;
  reasonGT?: InputMaybe<Scalars['String']['input']>;
  reasonGTE?: InputMaybe<Scalars['String']['input']>;
  reasonHasPrefix?: InputMaybe<Scalars['String']['input']>;
  reasonHasSuffix?: InputMaybe<Scalars['String']['input']>;
  reasonIn?: InputMaybe<Array<Scalars['String']['input']>>;
  reasonIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  reasonLT?: InputMaybe<Scalars['String']['input']>;
  reasonLTE?: InputMaybe<Scalars['String']['input']>;
  reasonNEQ?: InputMaybe<Scalars['String']['input']>;
  reasonNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  reasonNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** status field predicates */
  status?: InputMaybe<Scalars['String']['input']>;
  statusContains?: InputMaybe<Scalars['String']['input']>;
  statusContainsFold?: InputMaybe<Scalars['String']['input']>;
  statusEqualFold?: InputMaybe<Scalars['String']['input']>;
  statusGT?: InputMaybe<Scalars['String']['input']>;
  statusGTE?: InputMaybe<Scalars['String']['input']>;
  statusHasPrefix?: InputMaybe<Scalars['String']['input']>;
  statusHasSuffix?: InputMaybe<Scalars['String']['input']>;
  statusIn?: InputMaybe<Array<Scalars['String']['input']>>;
  statusLT?: InputMaybe<Scalars['String']['input']>;
  statusLTE?: InputMaybe<Scalars['String']['input']>;
  statusNEQ?: InputMaybe<Scalars['String']['input']>;
  statusNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** url field predicates */
  url?: InputMaybe<Scalars['String']['input']>;
  urlContains?: InputMaybe<Scalars['String']['input']>;
  urlContainsFold?: InputMaybe<Scalars['String']['input']>;
  urlEqualFold?: InputMaybe<Scalars['String']['input']>;
  urlGT?: InputMaybe<Scalars['String']['input']>;
  urlGTE?: InputMaybe<Scalars['String']['input']>;
  urlHasPrefix?: InputMaybe<Scalars['String']['input']>;
  urlHasSuffix?: InputMaybe<Scalars['String']['input']>;
  urlIn?: InputMaybe<Array<Scalars['String']['input']>>;
  urlLT?: InputMaybe<Scalars['String']['input']>;
  urlLTE?: InputMaybe<Scalars['String']['input']>;
  urlNEQ?: InputMaybe<Scalars['String']['input']>;
  urlNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
};

export type ExitCode = {
  __typename?: 'ExitCode';
  code: Scalars['Int']['output'];
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
};

export type FilesMetric = Node & {
  __typename?: 'FilesMetric';
  artifactMetrics?: Maybe<Array<ArtifactMetrics>>;
  count?: Maybe<Scalars['Int']['output']>;
  id: Scalars['ID']['output'];
  sizeInBytes?: Maybe<Scalars['Int']['output']>;
};

/**
 * FilesMetricWhereInput is used for filtering FilesMetric objects.
 * Input was generated by ent.
 */
export type FilesMetricWhereInput = {
  and?: InputMaybe<Array<FilesMetricWhereInput>>;
  /** count field predicates */
  count?: InputMaybe<Scalars['Int']['input']>;
  countGT?: InputMaybe<Scalars['Int']['input']>;
  countGTE?: InputMaybe<Scalars['Int']['input']>;
  countIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  countIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  countLT?: InputMaybe<Scalars['Int']['input']>;
  countLTE?: InputMaybe<Scalars['Int']['input']>;
  countNEQ?: InputMaybe<Scalars['Int']['input']>;
  countNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  countNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** artifact_metrics edge predicates */
  hasArtifactMetrics?: InputMaybe<Scalars['Boolean']['input']>;
  hasArtifactMetricsWith?: InputMaybe<Array<ArtifactMetricsWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<FilesMetricWhereInput>;
  or?: InputMaybe<Array<FilesMetricWhereInput>>;
  /** size_in_bytes field predicates */
  sizeInBytes?: InputMaybe<Scalars['Int']['input']>;
  sizeInBytesGT?: InputMaybe<Scalars['Int']['input']>;
  sizeInBytesGTE?: InputMaybe<Scalars['Int']['input']>;
  sizeInBytesIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  sizeInBytesIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  sizeInBytesLT?: InputMaybe<Scalars['Int']['input']>;
  sizeInBytesLTE?: InputMaybe<Scalars['Int']['input']>;
  sizeInBytesNEQ?: InputMaybe<Scalars['Int']['input']>;
  sizeInBytesNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  sizeInBytesNotNil?: InputMaybe<Scalars['Boolean']['input']>;
};

export type GarbageMetrics = Node & {
  __typename?: 'GarbageMetrics';
  garbageCollected?: Maybe<Scalars['Int']['output']>;
  id: Scalars['ID']['output'];
  memoryMetrics?: Maybe<Array<MemoryMetrics>>;
  type?: Maybe<Scalars['String']['output']>;
};

/**
 * GarbageMetricsWhereInput is used for filtering GarbageMetrics objects.
 * Input was generated by ent.
 */
export type GarbageMetricsWhereInput = {
  and?: InputMaybe<Array<GarbageMetricsWhereInput>>;
  /** garbage_collected field predicates */
  garbageCollected?: InputMaybe<Scalars['Int']['input']>;
  garbageCollectedGT?: InputMaybe<Scalars['Int']['input']>;
  garbageCollectedGTE?: InputMaybe<Scalars['Int']['input']>;
  garbageCollectedIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  garbageCollectedIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  garbageCollectedLT?: InputMaybe<Scalars['Int']['input']>;
  garbageCollectedLTE?: InputMaybe<Scalars['Int']['input']>;
  garbageCollectedNEQ?: InputMaybe<Scalars['Int']['input']>;
  garbageCollectedNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  garbageCollectedNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** memory_metrics edge predicates */
  hasMemoryMetrics?: InputMaybe<Scalars['Boolean']['input']>;
  hasMemoryMetricsWith?: InputMaybe<Array<MemoryMetricsWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<GarbageMetricsWhereInput>;
  or?: InputMaybe<Array<GarbageMetricsWhereInput>>;
  /** type field predicates */
  type?: InputMaybe<Scalars['String']['input']>;
  typeContains?: InputMaybe<Scalars['String']['input']>;
  typeContainsFold?: InputMaybe<Scalars['String']['input']>;
  typeEqualFold?: InputMaybe<Scalars['String']['input']>;
  typeGT?: InputMaybe<Scalars['String']['input']>;
  typeGTE?: InputMaybe<Scalars['String']['input']>;
  typeHasPrefix?: InputMaybe<Scalars['String']['input']>;
  typeHasSuffix?: InputMaybe<Scalars['String']['input']>;
  typeIn?: InputMaybe<Array<Scalars['String']['input']>>;
  typeIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  typeLT?: InputMaybe<Scalars['String']['input']>;
  typeLTE?: InputMaybe<Scalars['String']['input']>;
  typeNEQ?: InputMaybe<Scalars['String']['input']>;
  typeNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  typeNotNil?: InputMaybe<Scalars['Boolean']['input']>;
};

export type MemoryMetrics = Node & {
  __typename?: 'MemoryMetrics';
  garbageMetrics?: Maybe<Array<GarbageMetrics>>;
  id: Scalars['ID']['output'];
  metrics?: Maybe<Array<Metrics>>;
  peakPostGcHeapSize?: Maybe<Scalars['Int']['output']>;
  peakPostGcTenuredSpaceHeapSize?: Maybe<Scalars['Int']['output']>;
  usedHeapSizePostBuild?: Maybe<Scalars['Int']['output']>;
};

/**
 * MemoryMetricsWhereInput is used for filtering MemoryMetrics objects.
 * Input was generated by ent.
 */
export type MemoryMetricsWhereInput = {
  and?: InputMaybe<Array<MemoryMetricsWhereInput>>;
  /** garbage_metrics edge predicates */
  hasGarbageMetrics?: InputMaybe<Scalars['Boolean']['input']>;
  hasGarbageMetricsWith?: InputMaybe<Array<GarbageMetricsWhereInput>>;
  /** metrics edge predicates */
  hasMetrics?: InputMaybe<Scalars['Boolean']['input']>;
  hasMetricsWith?: InputMaybe<Array<MetricsWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<MemoryMetricsWhereInput>;
  or?: InputMaybe<Array<MemoryMetricsWhereInput>>;
  /** peak_post_gc_heap_size field predicates */
  peakPostGcHeapSize?: InputMaybe<Scalars['Int']['input']>;
  peakPostGcHeapSizeGT?: InputMaybe<Scalars['Int']['input']>;
  peakPostGcHeapSizeGTE?: InputMaybe<Scalars['Int']['input']>;
  peakPostGcHeapSizeIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  peakPostGcHeapSizeIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  peakPostGcHeapSizeLT?: InputMaybe<Scalars['Int']['input']>;
  peakPostGcHeapSizeLTE?: InputMaybe<Scalars['Int']['input']>;
  peakPostGcHeapSizeNEQ?: InputMaybe<Scalars['Int']['input']>;
  peakPostGcHeapSizeNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  peakPostGcHeapSizeNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** peak_post_gc_tenured_space_heap_size field predicates */
  peakPostGcTenuredSpaceHeapSize?: InputMaybe<Scalars['Int']['input']>;
  peakPostGcTenuredSpaceHeapSizeGT?: InputMaybe<Scalars['Int']['input']>;
  peakPostGcTenuredSpaceHeapSizeGTE?: InputMaybe<Scalars['Int']['input']>;
  peakPostGcTenuredSpaceHeapSizeIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  peakPostGcTenuredSpaceHeapSizeIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  peakPostGcTenuredSpaceHeapSizeLT?: InputMaybe<Scalars['Int']['input']>;
  peakPostGcTenuredSpaceHeapSizeLTE?: InputMaybe<Scalars['Int']['input']>;
  peakPostGcTenuredSpaceHeapSizeNEQ?: InputMaybe<Scalars['Int']['input']>;
  peakPostGcTenuredSpaceHeapSizeNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  peakPostGcTenuredSpaceHeapSizeNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** used_heap_size_post_build field predicates */
  usedHeapSizePostBuild?: InputMaybe<Scalars['Int']['input']>;
  usedHeapSizePostBuildGT?: InputMaybe<Scalars['Int']['input']>;
  usedHeapSizePostBuildGTE?: InputMaybe<Scalars['Int']['input']>;
  usedHeapSizePostBuildIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  usedHeapSizePostBuildIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  usedHeapSizePostBuildLT?: InputMaybe<Scalars['Int']['input']>;
  usedHeapSizePostBuildLTE?: InputMaybe<Scalars['Int']['input']>;
  usedHeapSizePostBuildNEQ?: InputMaybe<Scalars['Int']['input']>;
  usedHeapSizePostBuildNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  usedHeapSizePostBuildNotNil?: InputMaybe<Scalars['Boolean']['input']>;
};

export type Metrics = Node & {
  __typename?: 'Metrics';
  actionSummary?: Maybe<Array<ActionSummary>>;
  artifactMetrics?: Maybe<Array<ArtifactMetrics>>;
  bazelInvocation?: Maybe<BazelInvocation>;
  cumulativeMetrics?: Maybe<Array<CumulativeMetrics>>;
  dynamicExecutionMetrics?: Maybe<Array<DynamicExecutionMetrics>>;
  id: Scalars['ID']['output'];
  memoryMetrics?: Maybe<Array<MemoryMetrics>>;
  networkMetrics?: Maybe<Array<NetworkMetrics>>;
  packageMetrics?: Maybe<Array<PackageMetrics>>;
  targetMetrics?: Maybe<Array<TargetMetrics>>;
  timingMetrics?: Maybe<Array<TimingMetrics>>;
};

/** A connection to a list of items. */
export type MetricsConnection = {
  __typename?: 'MetricsConnection';
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<MetricsEdge>>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output'];
};

/** An edge in a connection. */
export type MetricsEdge = {
  __typename?: 'MetricsEdge';
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output'];
  /** The item at the end of the edge. */
  node?: Maybe<Metrics>;
};

/**
 * MetricsWhereInput is used for filtering Metrics objects.
 * Input was generated by ent.
 */
export type MetricsWhereInput = {
  and?: InputMaybe<Array<MetricsWhereInput>>;
  /** action_summary edge predicates */
  hasActionSummary?: InputMaybe<Scalars['Boolean']['input']>;
  hasActionSummaryWith?: InputMaybe<Array<ActionSummaryWhereInput>>;
  /** artifact_metrics edge predicates */
  hasArtifactMetrics?: InputMaybe<Scalars['Boolean']['input']>;
  hasArtifactMetricsWith?: InputMaybe<Array<ArtifactMetricsWhereInput>>;
  /** bazel_invocation edge predicates */
  hasBazelInvocation?: InputMaybe<Scalars['Boolean']['input']>;
  hasBazelInvocationWith?: InputMaybe<Array<BazelInvocationWhereInput>>;
  /** cumulative_metrics edge predicates */
  hasCumulativeMetrics?: InputMaybe<Scalars['Boolean']['input']>;
  hasCumulativeMetricsWith?: InputMaybe<Array<CumulativeMetricsWhereInput>>;
  /** dynamic_execution_metrics edge predicates */
  hasDynamicExecutionMetrics?: InputMaybe<Scalars['Boolean']['input']>;
  hasDynamicExecutionMetricsWith?: InputMaybe<Array<DynamicExecutionMetricsWhereInput>>;
  /** memory_metrics edge predicates */
  hasMemoryMetrics?: InputMaybe<Scalars['Boolean']['input']>;
  hasMemoryMetricsWith?: InputMaybe<Array<MemoryMetricsWhereInput>>;
  /** network_metrics edge predicates */
  hasNetworkMetrics?: InputMaybe<Scalars['Boolean']['input']>;
  hasNetworkMetricsWith?: InputMaybe<Array<NetworkMetricsWhereInput>>;
  /** package_metrics edge predicates */
  hasPackageMetrics?: InputMaybe<Scalars['Boolean']['input']>;
  hasPackageMetricsWith?: InputMaybe<Array<PackageMetricsWhereInput>>;
  /** target_metrics edge predicates */
  hasTargetMetrics?: InputMaybe<Scalars['Boolean']['input']>;
  hasTargetMetricsWith?: InputMaybe<Array<TargetMetricsWhereInput>>;
  /** timing_metrics edge predicates */
  hasTimingMetrics?: InputMaybe<Scalars['Boolean']['input']>;
  hasTimingMetricsWith?: InputMaybe<Array<TimingMetricsWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<MetricsWhereInput>;
  or?: InputMaybe<Array<MetricsWhereInput>>;
};

export type MissDetail = Node & {
  __typename?: 'MissDetail';
  actionCacheStatistics?: Maybe<Array<ActionCacheStatistics>>;
  count?: Maybe<Scalars['Int']['output']>;
  id: Scalars['ID']['output'];
  reason?: Maybe<MissDetailReason>;
};

/** MissDetailReason is enum for the field reason */
export enum MissDetailReason {
  CorruptedCacheEntry = 'CORRUPTED_CACHE_ENTRY',
  DifferentActionKey = 'DIFFERENT_ACTION_KEY',
  DifferentDeps = 'DIFFERENT_DEPS',
  DifferentEnvironment = 'DIFFERENT_ENVIRONMENT',
  DifferentFiles = 'DIFFERENT_FILES',
  NotCached = 'NOT_CACHED',
  UnconditionalExecution = 'UNCONDITIONAL_EXECUTION',
  Unknown = 'UNKNOWN'
}

/**
 * MissDetailWhereInput is used for filtering MissDetail objects.
 * Input was generated by ent.
 */
export type MissDetailWhereInput = {
  and?: InputMaybe<Array<MissDetailWhereInput>>;
  /** count field predicates */
  count?: InputMaybe<Scalars['Int']['input']>;
  countGT?: InputMaybe<Scalars['Int']['input']>;
  countGTE?: InputMaybe<Scalars['Int']['input']>;
  countIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  countIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  countLT?: InputMaybe<Scalars['Int']['input']>;
  countLTE?: InputMaybe<Scalars['Int']['input']>;
  countNEQ?: InputMaybe<Scalars['Int']['input']>;
  countNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  countNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** action_cache_statistics edge predicates */
  hasActionCacheStatistics?: InputMaybe<Scalars['Boolean']['input']>;
  hasActionCacheStatisticsWith?: InputMaybe<Array<ActionCacheStatisticsWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<MissDetailWhereInput>;
  or?: InputMaybe<Array<MissDetailWhereInput>>;
  /** reason field predicates */
  reason?: InputMaybe<MissDetailReason>;
  reasonIn?: InputMaybe<Array<MissDetailReason>>;
  reasonIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  reasonNEQ?: InputMaybe<MissDetailReason>;
  reasonNotIn?: InputMaybe<Array<MissDetailReason>>;
  reasonNotNil?: InputMaybe<Scalars['Boolean']['input']>;
};

export type NamedFile = {
  __typename?: 'NamedFile';
  name: Scalars['String']['output'];
  url: Scalars['String']['output'];
};

export type NetworkMetrics = Node & {
  __typename?: 'NetworkMetrics';
  id: Scalars['ID']['output'];
  metrics?: Maybe<Array<Metrics>>;
  systemNetworkStats?: Maybe<Array<SystemNetworkStats>>;
};

/**
 * NetworkMetricsWhereInput is used for filtering NetworkMetrics objects.
 * Input was generated by ent.
 */
export type NetworkMetricsWhereInput = {
  and?: InputMaybe<Array<NetworkMetricsWhereInput>>;
  /** metrics edge predicates */
  hasMetrics?: InputMaybe<Scalars['Boolean']['input']>;
  hasMetricsWith?: InputMaybe<Array<MetricsWhereInput>>;
  /** system_network_stats edge predicates */
  hasSystemNetworkStats?: InputMaybe<Scalars['Boolean']['input']>;
  hasSystemNetworkStatsWith?: InputMaybe<Array<SystemNetworkStatsWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<NetworkMetricsWhereInput>;
  or?: InputMaybe<Array<NetworkMetricsWhereInput>>;
};

/**
 * An object with an ID.
 * Follows the [Relay Global Object Identification Specification](https://relay.dev/graphql/objectidentification.htm)
 */
export type Node = {
  /** The id of the object. */
  id: Scalars['ID']['output'];
};

/** Possible directions in which to order a list of items when provided an `orderBy` argument. */
export enum OrderDirection {
  /** Specifies an ascending order for a given `orderBy` argument. */
  Asc = 'ASC',
  /** Specifies a descending order for a given `orderBy` argument. */
  Desc = 'DESC'
}

export type PackageLoadMetrics = Node & {
  __typename?: 'PackageLoadMetrics';
  computationSteps?: Maybe<Scalars['Int']['output']>;
  id: Scalars['ID']['output'];
  loadDuration?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  numTargets?: Maybe<Scalars['Int']['output']>;
  numTransitiveLoads?: Maybe<Scalars['Int']['output']>;
  packageMetrics?: Maybe<Array<PackageMetrics>>;
  packageOverhead?: Maybe<Scalars['Int']['output']>;
};

/**
 * PackageLoadMetricsWhereInput is used for filtering PackageLoadMetrics objects.
 * Input was generated by ent.
 */
export type PackageLoadMetricsWhereInput = {
  and?: InputMaybe<Array<PackageLoadMetricsWhereInput>>;
  /** computation_steps field predicates */
  computationSteps?: InputMaybe<Scalars['Int']['input']>;
  computationStepsGT?: InputMaybe<Scalars['Int']['input']>;
  computationStepsGTE?: InputMaybe<Scalars['Int']['input']>;
  computationStepsIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  computationStepsIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  computationStepsLT?: InputMaybe<Scalars['Int']['input']>;
  computationStepsLTE?: InputMaybe<Scalars['Int']['input']>;
  computationStepsNEQ?: InputMaybe<Scalars['Int']['input']>;
  computationStepsNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  computationStepsNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** package_metrics edge predicates */
  hasPackageMetrics?: InputMaybe<Scalars['Boolean']['input']>;
  hasPackageMetricsWith?: InputMaybe<Array<PackageMetricsWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** load_duration field predicates */
  loadDuration?: InputMaybe<Scalars['Int']['input']>;
  loadDurationGT?: InputMaybe<Scalars['Int']['input']>;
  loadDurationGTE?: InputMaybe<Scalars['Int']['input']>;
  loadDurationIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  loadDurationIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  loadDurationLT?: InputMaybe<Scalars['Int']['input']>;
  loadDurationLTE?: InputMaybe<Scalars['Int']['input']>;
  loadDurationNEQ?: InputMaybe<Scalars['Int']['input']>;
  loadDurationNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  loadDurationNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>;
  nameContains?: InputMaybe<Scalars['String']['input']>;
  nameContainsFold?: InputMaybe<Scalars['String']['input']>;
  nameEqualFold?: InputMaybe<Scalars['String']['input']>;
  nameGT?: InputMaybe<Scalars['String']['input']>;
  nameGTE?: InputMaybe<Scalars['String']['input']>;
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  nameLT?: InputMaybe<Scalars['String']['input']>;
  nameLTE?: InputMaybe<Scalars['String']['input']>;
  nameNEQ?: InputMaybe<Scalars['String']['input']>;
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  not?: InputMaybe<PackageLoadMetricsWhereInput>;
  /** num_targets field predicates */
  numTargets?: InputMaybe<Scalars['Int']['input']>;
  numTargetsGT?: InputMaybe<Scalars['Int']['input']>;
  numTargetsGTE?: InputMaybe<Scalars['Int']['input']>;
  numTargetsIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  numTargetsIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  numTargetsLT?: InputMaybe<Scalars['Int']['input']>;
  numTargetsLTE?: InputMaybe<Scalars['Int']['input']>;
  numTargetsNEQ?: InputMaybe<Scalars['Int']['input']>;
  numTargetsNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  numTargetsNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** num_transitive_loads field predicates */
  numTransitiveLoads?: InputMaybe<Scalars['Int']['input']>;
  numTransitiveLoadsGT?: InputMaybe<Scalars['Int']['input']>;
  numTransitiveLoadsGTE?: InputMaybe<Scalars['Int']['input']>;
  numTransitiveLoadsIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  numTransitiveLoadsIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  numTransitiveLoadsLT?: InputMaybe<Scalars['Int']['input']>;
  numTransitiveLoadsLTE?: InputMaybe<Scalars['Int']['input']>;
  numTransitiveLoadsNEQ?: InputMaybe<Scalars['Int']['input']>;
  numTransitiveLoadsNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  numTransitiveLoadsNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  or?: InputMaybe<Array<PackageLoadMetricsWhereInput>>;
  /** package_overhead field predicates */
  packageOverhead?: InputMaybe<Scalars['Int']['input']>;
  packageOverheadGT?: InputMaybe<Scalars['Int']['input']>;
  packageOverheadGTE?: InputMaybe<Scalars['Int']['input']>;
  packageOverheadIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  packageOverheadIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  packageOverheadLT?: InputMaybe<Scalars['Int']['input']>;
  packageOverheadLTE?: InputMaybe<Scalars['Int']['input']>;
  packageOverheadNEQ?: InputMaybe<Scalars['Int']['input']>;
  packageOverheadNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  packageOverheadNotNil?: InputMaybe<Scalars['Boolean']['input']>;
};

export type PackageMetrics = Node & {
  __typename?: 'PackageMetrics';
  id: Scalars['ID']['output'];
  metrics?: Maybe<Array<Metrics>>;
  packageLoadMetrics?: Maybe<Array<PackageLoadMetrics>>;
  packagesLoaded?: Maybe<Scalars['Int']['output']>;
};

/**
 * PackageMetricsWhereInput is used for filtering PackageMetrics objects.
 * Input was generated by ent.
 */
export type PackageMetricsWhereInput = {
  and?: InputMaybe<Array<PackageMetricsWhereInput>>;
  /** metrics edge predicates */
  hasMetrics?: InputMaybe<Scalars['Boolean']['input']>;
  hasMetricsWith?: InputMaybe<Array<MetricsWhereInput>>;
  /** package_load_metrics edge predicates */
  hasPackageLoadMetrics?: InputMaybe<Scalars['Boolean']['input']>;
  hasPackageLoadMetricsWith?: InputMaybe<Array<PackageLoadMetricsWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<PackageMetricsWhereInput>;
  or?: InputMaybe<Array<PackageMetricsWhereInput>>;
  /** packages_loaded field predicates */
  packagesLoaded?: InputMaybe<Scalars['Int']['input']>;
  packagesLoadedGT?: InputMaybe<Scalars['Int']['input']>;
  packagesLoadedGTE?: InputMaybe<Scalars['Int']['input']>;
  packagesLoadedIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  packagesLoadedIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  packagesLoadedLT?: InputMaybe<Scalars['Int']['input']>;
  packagesLoadedLTE?: InputMaybe<Scalars['Int']['input']>;
  packagesLoadedNEQ?: InputMaybe<Scalars['Int']['input']>;
  packagesLoadedNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  packagesLoadedNotNil?: InputMaybe<Scalars['Boolean']['input']>;
};

/**
 * Information about pagination in a connection.
 * https://relay.dev/graphql/connections.htm#sec-undefined.PageInfo
 */
export type PageInfo = {
  __typename?: 'PageInfo';
  /** When paginating forwards, the cursor to continue. */
  endCursor?: Maybe<Scalars['Cursor']['output']>;
  /** When paginating forwards, are there more items? */
  hasNextPage: Scalars['Boolean']['output'];
  /** When paginating backwards, are there more items? */
  hasPreviousPage: Scalars['Boolean']['output'];
  /** When paginating backwards, the cursor to continue. */
  startCursor?: Maybe<Scalars['Cursor']['output']>;
};

export type Problem = {
  id: Scalars['ID']['output'];
  label: Scalars['String']['output'];
};

export type ProgressProblem = Node & Problem & {
  __typename?: 'ProgressProblem';
  id: Scalars['ID']['output'];
  label: Scalars['String']['output'];
  output: Scalars['String']['output'];
};

export type Query = {
  __typename?: 'Query';
  bazelInvocation: BazelInvocation;
  findBazelInvocations: BazelInvocationConnection;
  findBuilds: BuildConnection;
  findMetrics: MetricsConnection;
  getBuild?: Maybe<Build>;
  /** Fetches an object given its ID. */
  node?: Maybe<Node>;
  /** Lookup nodes by a list of IDs. */
  nodes: Array<Maybe<Node>>;
};


export type QueryBazelInvocationArgs = {
  invocationId: Scalars['String']['input'];
};


export type QueryFindBazelInvocationsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<BazelInvocationWhereInput>;
};


export type QueryFindBuildsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<BuildWhereInput>;
};


export type QueryFindMetricsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<MetricsWhereInput>;
};


export type QueryGetBuildArgs = {
  buildURL?: InputMaybe<Scalars['String']['input']>;
  buildUUID?: InputMaybe<Scalars['UUID']['input']>;
};


export type QueryNodeArgs = {
  id: Scalars['ID']['input'];
};


export type QueryNodesArgs = {
  ids: Array<Scalars['ID']['input']>;
};

export type RaceStatistics = Node & {
  __typename?: 'RaceStatistics';
  dynamicExecutionMetrics?: Maybe<Array<DynamicExecutionMetrics>>;
  id: Scalars['ID']['output'];
  localRunner?: Maybe<Scalars['String']['output']>;
  localWins?: Maybe<Scalars['Int']['output']>;
  mnemonic?: Maybe<Scalars['String']['output']>;
  remoteRunner?: Maybe<Scalars['String']['output']>;
  renoteWins?: Maybe<Scalars['Int']['output']>;
};

/**
 * RaceStatisticsWhereInput is used for filtering RaceStatistics objects.
 * Input was generated by ent.
 */
export type RaceStatisticsWhereInput = {
  and?: InputMaybe<Array<RaceStatisticsWhereInput>>;
  /** dynamic_execution_metrics edge predicates */
  hasDynamicExecutionMetrics?: InputMaybe<Scalars['Boolean']['input']>;
  hasDynamicExecutionMetricsWith?: InputMaybe<Array<DynamicExecutionMetricsWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** local_runner field predicates */
  localRunner?: InputMaybe<Scalars['String']['input']>;
  localRunnerContains?: InputMaybe<Scalars['String']['input']>;
  localRunnerContainsFold?: InputMaybe<Scalars['String']['input']>;
  localRunnerEqualFold?: InputMaybe<Scalars['String']['input']>;
  localRunnerGT?: InputMaybe<Scalars['String']['input']>;
  localRunnerGTE?: InputMaybe<Scalars['String']['input']>;
  localRunnerHasPrefix?: InputMaybe<Scalars['String']['input']>;
  localRunnerHasSuffix?: InputMaybe<Scalars['String']['input']>;
  localRunnerIn?: InputMaybe<Array<Scalars['String']['input']>>;
  localRunnerIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  localRunnerLT?: InputMaybe<Scalars['String']['input']>;
  localRunnerLTE?: InputMaybe<Scalars['String']['input']>;
  localRunnerNEQ?: InputMaybe<Scalars['String']['input']>;
  localRunnerNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  localRunnerNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** local_wins field predicates */
  localWins?: InputMaybe<Scalars['Int']['input']>;
  localWinsGT?: InputMaybe<Scalars['Int']['input']>;
  localWinsGTE?: InputMaybe<Scalars['Int']['input']>;
  localWinsIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  localWinsIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  localWinsLT?: InputMaybe<Scalars['Int']['input']>;
  localWinsLTE?: InputMaybe<Scalars['Int']['input']>;
  localWinsNEQ?: InputMaybe<Scalars['Int']['input']>;
  localWinsNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  localWinsNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** mnemonic field predicates */
  mnemonic?: InputMaybe<Scalars['String']['input']>;
  mnemonicContains?: InputMaybe<Scalars['String']['input']>;
  mnemonicContainsFold?: InputMaybe<Scalars['String']['input']>;
  mnemonicEqualFold?: InputMaybe<Scalars['String']['input']>;
  mnemonicGT?: InputMaybe<Scalars['String']['input']>;
  mnemonicGTE?: InputMaybe<Scalars['String']['input']>;
  mnemonicHasPrefix?: InputMaybe<Scalars['String']['input']>;
  mnemonicHasSuffix?: InputMaybe<Scalars['String']['input']>;
  mnemonicIn?: InputMaybe<Array<Scalars['String']['input']>>;
  mnemonicIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  mnemonicLT?: InputMaybe<Scalars['String']['input']>;
  mnemonicLTE?: InputMaybe<Scalars['String']['input']>;
  mnemonicNEQ?: InputMaybe<Scalars['String']['input']>;
  mnemonicNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  mnemonicNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  not?: InputMaybe<RaceStatisticsWhereInput>;
  or?: InputMaybe<Array<RaceStatisticsWhereInput>>;
  /** remote_runner field predicates */
  remoteRunner?: InputMaybe<Scalars['String']['input']>;
  remoteRunnerContains?: InputMaybe<Scalars['String']['input']>;
  remoteRunnerContainsFold?: InputMaybe<Scalars['String']['input']>;
  remoteRunnerEqualFold?: InputMaybe<Scalars['String']['input']>;
  remoteRunnerGT?: InputMaybe<Scalars['String']['input']>;
  remoteRunnerGTE?: InputMaybe<Scalars['String']['input']>;
  remoteRunnerHasPrefix?: InputMaybe<Scalars['String']['input']>;
  remoteRunnerHasSuffix?: InputMaybe<Scalars['String']['input']>;
  remoteRunnerIn?: InputMaybe<Array<Scalars['String']['input']>>;
  remoteRunnerIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  remoteRunnerLT?: InputMaybe<Scalars['String']['input']>;
  remoteRunnerLTE?: InputMaybe<Scalars['String']['input']>;
  remoteRunnerNEQ?: InputMaybe<Scalars['String']['input']>;
  remoteRunnerNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  remoteRunnerNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** renote_wins field predicates */
  renoteWins?: InputMaybe<Scalars['Int']['input']>;
  renoteWinsGT?: InputMaybe<Scalars['Int']['input']>;
  renoteWinsGTE?: InputMaybe<Scalars['Int']['input']>;
  renoteWinsIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  renoteWinsIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  renoteWinsLT?: InputMaybe<Scalars['Int']['input']>;
  renoteWinsLTE?: InputMaybe<Scalars['Int']['input']>;
  renoteWinsNEQ?: InputMaybe<Scalars['Int']['input']>;
  renoteWinsNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  renoteWinsNotNil?: InputMaybe<Scalars['Boolean']['input']>;
};

export type RunnerCount = Node & {
  __typename?: 'RunnerCount';
  actionSummary?: Maybe<Array<ActionSummary>>;
  actionsExecuted?: Maybe<Scalars['Int']['output']>;
  execKind?: Maybe<Scalars['String']['output']>;
  id: Scalars['ID']['output'];
  name?: Maybe<Scalars['String']['output']>;
};

/**
 * RunnerCountWhereInput is used for filtering RunnerCount objects.
 * Input was generated by ent.
 */
export type RunnerCountWhereInput = {
  /** actions_executed field predicates */
  actionsExecuted?: InputMaybe<Scalars['Int']['input']>;
  actionsExecutedGT?: InputMaybe<Scalars['Int']['input']>;
  actionsExecutedGTE?: InputMaybe<Scalars['Int']['input']>;
  actionsExecutedIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  actionsExecutedIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  actionsExecutedLT?: InputMaybe<Scalars['Int']['input']>;
  actionsExecutedLTE?: InputMaybe<Scalars['Int']['input']>;
  actionsExecutedNEQ?: InputMaybe<Scalars['Int']['input']>;
  actionsExecutedNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  actionsExecutedNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  and?: InputMaybe<Array<RunnerCountWhereInput>>;
  /** exec_kind field predicates */
  execKind?: InputMaybe<Scalars['String']['input']>;
  execKindContains?: InputMaybe<Scalars['String']['input']>;
  execKindContainsFold?: InputMaybe<Scalars['String']['input']>;
  execKindEqualFold?: InputMaybe<Scalars['String']['input']>;
  execKindGT?: InputMaybe<Scalars['String']['input']>;
  execKindGTE?: InputMaybe<Scalars['String']['input']>;
  execKindHasPrefix?: InputMaybe<Scalars['String']['input']>;
  execKindHasSuffix?: InputMaybe<Scalars['String']['input']>;
  execKindIn?: InputMaybe<Array<Scalars['String']['input']>>;
  execKindIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  execKindLT?: InputMaybe<Scalars['String']['input']>;
  execKindLTE?: InputMaybe<Scalars['String']['input']>;
  execKindNEQ?: InputMaybe<Scalars['String']['input']>;
  execKindNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  execKindNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** action_summary edge predicates */
  hasActionSummary?: InputMaybe<Scalars['Boolean']['input']>;
  hasActionSummaryWith?: InputMaybe<Array<ActionSummaryWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>;
  nameContains?: InputMaybe<Scalars['String']['input']>;
  nameContainsFold?: InputMaybe<Scalars['String']['input']>;
  nameEqualFold?: InputMaybe<Scalars['String']['input']>;
  nameGT?: InputMaybe<Scalars['String']['input']>;
  nameGTE?: InputMaybe<Scalars['String']['input']>;
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  nameLT?: InputMaybe<Scalars['String']['input']>;
  nameLTE?: InputMaybe<Scalars['String']['input']>;
  nameNEQ?: InputMaybe<Scalars['String']['input']>;
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  not?: InputMaybe<RunnerCountWhereInput>;
  or?: InputMaybe<Array<RunnerCountWhereInput>>;
};

export type SystemNetworkStats = Node & {
  __typename?: 'SystemNetworkStats';
  bytesRecv?: Maybe<Scalars['Int']['output']>;
  bytesSent?: Maybe<Scalars['Int']['output']>;
  id: Scalars['ID']['output'];
  networkMetrics?: Maybe<NetworkMetrics>;
  packetsRecv?: Maybe<Scalars['Int']['output']>;
  packetsSent?: Maybe<Scalars['Int']['output']>;
  peakBytesRecvPerSec?: Maybe<Scalars['Int']['output']>;
  peakBytesSentPerSec?: Maybe<Scalars['Int']['output']>;
  peakPacketsRecvPerSec?: Maybe<Scalars['Int']['output']>;
  peakPacketsSentPerSec?: Maybe<Scalars['Int']['output']>;
};

/**
 * SystemNetworkStatsWhereInput is used for filtering SystemNetworkStats objects.
 * Input was generated by ent.
 */
export type SystemNetworkStatsWhereInput = {
  and?: InputMaybe<Array<SystemNetworkStatsWhereInput>>;
  /** bytes_recv field predicates */
  bytesRecv?: InputMaybe<Scalars['Int']['input']>;
  bytesRecvGT?: InputMaybe<Scalars['Int']['input']>;
  bytesRecvGTE?: InputMaybe<Scalars['Int']['input']>;
  bytesRecvIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  bytesRecvIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  bytesRecvLT?: InputMaybe<Scalars['Int']['input']>;
  bytesRecvLTE?: InputMaybe<Scalars['Int']['input']>;
  bytesRecvNEQ?: InputMaybe<Scalars['Int']['input']>;
  bytesRecvNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  bytesRecvNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** bytes_sent field predicates */
  bytesSent?: InputMaybe<Scalars['Int']['input']>;
  bytesSentGT?: InputMaybe<Scalars['Int']['input']>;
  bytesSentGTE?: InputMaybe<Scalars['Int']['input']>;
  bytesSentIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  bytesSentIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  bytesSentLT?: InputMaybe<Scalars['Int']['input']>;
  bytesSentLTE?: InputMaybe<Scalars['Int']['input']>;
  bytesSentNEQ?: InputMaybe<Scalars['Int']['input']>;
  bytesSentNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  bytesSentNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** network_metrics edge predicates */
  hasNetworkMetrics?: InputMaybe<Scalars['Boolean']['input']>;
  hasNetworkMetricsWith?: InputMaybe<Array<NetworkMetricsWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<SystemNetworkStatsWhereInput>;
  or?: InputMaybe<Array<SystemNetworkStatsWhereInput>>;
  /** packets_recv field predicates */
  packetsRecv?: InputMaybe<Scalars['Int']['input']>;
  packetsRecvGT?: InputMaybe<Scalars['Int']['input']>;
  packetsRecvGTE?: InputMaybe<Scalars['Int']['input']>;
  packetsRecvIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  packetsRecvIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  packetsRecvLT?: InputMaybe<Scalars['Int']['input']>;
  packetsRecvLTE?: InputMaybe<Scalars['Int']['input']>;
  packetsRecvNEQ?: InputMaybe<Scalars['Int']['input']>;
  packetsRecvNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  packetsRecvNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** packets_sent field predicates */
  packetsSent?: InputMaybe<Scalars['Int']['input']>;
  packetsSentGT?: InputMaybe<Scalars['Int']['input']>;
  packetsSentGTE?: InputMaybe<Scalars['Int']['input']>;
  packetsSentIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  packetsSentIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  packetsSentLT?: InputMaybe<Scalars['Int']['input']>;
  packetsSentLTE?: InputMaybe<Scalars['Int']['input']>;
  packetsSentNEQ?: InputMaybe<Scalars['Int']['input']>;
  packetsSentNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  packetsSentNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** peak_bytes_recv_per_sec field predicates */
  peakBytesRecvPerSec?: InputMaybe<Scalars['Int']['input']>;
  peakBytesRecvPerSecGT?: InputMaybe<Scalars['Int']['input']>;
  peakBytesRecvPerSecGTE?: InputMaybe<Scalars['Int']['input']>;
  peakBytesRecvPerSecIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  peakBytesRecvPerSecIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  peakBytesRecvPerSecLT?: InputMaybe<Scalars['Int']['input']>;
  peakBytesRecvPerSecLTE?: InputMaybe<Scalars['Int']['input']>;
  peakBytesRecvPerSecNEQ?: InputMaybe<Scalars['Int']['input']>;
  peakBytesRecvPerSecNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  peakBytesRecvPerSecNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** peak_bytes_sent_per_sec field predicates */
  peakBytesSentPerSec?: InputMaybe<Scalars['Int']['input']>;
  peakBytesSentPerSecGT?: InputMaybe<Scalars['Int']['input']>;
  peakBytesSentPerSecGTE?: InputMaybe<Scalars['Int']['input']>;
  peakBytesSentPerSecIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  peakBytesSentPerSecIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  peakBytesSentPerSecLT?: InputMaybe<Scalars['Int']['input']>;
  peakBytesSentPerSecLTE?: InputMaybe<Scalars['Int']['input']>;
  peakBytesSentPerSecNEQ?: InputMaybe<Scalars['Int']['input']>;
  peakBytesSentPerSecNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  peakBytesSentPerSecNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** peak_packets_recv_per_sec field predicates */
  peakPacketsRecvPerSec?: InputMaybe<Scalars['Int']['input']>;
  peakPacketsRecvPerSecGT?: InputMaybe<Scalars['Int']['input']>;
  peakPacketsRecvPerSecGTE?: InputMaybe<Scalars['Int']['input']>;
  peakPacketsRecvPerSecIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  peakPacketsRecvPerSecIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  peakPacketsRecvPerSecLT?: InputMaybe<Scalars['Int']['input']>;
  peakPacketsRecvPerSecLTE?: InputMaybe<Scalars['Int']['input']>;
  peakPacketsRecvPerSecNEQ?: InputMaybe<Scalars['Int']['input']>;
  peakPacketsRecvPerSecNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  peakPacketsRecvPerSecNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** peak_packets_sent_per_sec field predicates */
  peakPacketsSentPerSec?: InputMaybe<Scalars['Int']['input']>;
  peakPacketsSentPerSecGT?: InputMaybe<Scalars['Int']['input']>;
  peakPacketsSentPerSecGTE?: InputMaybe<Scalars['Int']['input']>;
  peakPacketsSentPerSecIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  peakPacketsSentPerSecIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  peakPacketsSentPerSecLT?: InputMaybe<Scalars['Int']['input']>;
  peakPacketsSentPerSecLTE?: InputMaybe<Scalars['Int']['input']>;
  peakPacketsSentPerSecNEQ?: InputMaybe<Scalars['Int']['input']>;
  peakPacketsSentPerSecNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  peakPacketsSentPerSecNotNil?: InputMaybe<Scalars['Boolean']['input']>;
};

export type TargetMetrics = Node & {
  __typename?: 'TargetMetrics';
  id: Scalars['ID']['output'];
  metrics?: Maybe<Array<Metrics>>;
  targetsConfigured?: Maybe<Scalars['Int']['output']>;
  targetsConfiguredNotIncludingAspects?: Maybe<Scalars['Int']['output']>;
  targetsLoaded?: Maybe<Scalars['Int']['output']>;
};

/**
 * TargetMetricsWhereInput is used for filtering TargetMetrics objects.
 * Input was generated by ent.
 */
export type TargetMetricsWhereInput = {
  and?: InputMaybe<Array<TargetMetricsWhereInput>>;
  /** metrics edge predicates */
  hasMetrics?: InputMaybe<Scalars['Boolean']['input']>;
  hasMetricsWith?: InputMaybe<Array<MetricsWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<TargetMetricsWhereInput>;
  or?: InputMaybe<Array<TargetMetricsWhereInput>>;
  /** targets_configured field predicates */
  targetsConfigured?: InputMaybe<Scalars['Int']['input']>;
  targetsConfiguredGT?: InputMaybe<Scalars['Int']['input']>;
  targetsConfiguredGTE?: InputMaybe<Scalars['Int']['input']>;
  targetsConfiguredIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  targetsConfiguredIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  targetsConfiguredLT?: InputMaybe<Scalars['Int']['input']>;
  targetsConfiguredLTE?: InputMaybe<Scalars['Int']['input']>;
  targetsConfiguredNEQ?: InputMaybe<Scalars['Int']['input']>;
  targetsConfiguredNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  /** targets_configured_not_including_aspects field predicates */
  targetsConfiguredNotIncludingAspects?: InputMaybe<Scalars['Int']['input']>;
  targetsConfiguredNotIncludingAspectsGT?: InputMaybe<Scalars['Int']['input']>;
  targetsConfiguredNotIncludingAspectsGTE?: InputMaybe<Scalars['Int']['input']>;
  targetsConfiguredNotIncludingAspectsIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  targetsConfiguredNotIncludingAspectsIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  targetsConfiguredNotIncludingAspectsLT?: InputMaybe<Scalars['Int']['input']>;
  targetsConfiguredNotIncludingAspectsLTE?: InputMaybe<Scalars['Int']['input']>;
  targetsConfiguredNotIncludingAspectsNEQ?: InputMaybe<Scalars['Int']['input']>;
  targetsConfiguredNotIncludingAspectsNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  targetsConfiguredNotIncludingAspectsNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  targetsConfiguredNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** targets_loaded field predicates */
  targetsLoaded?: InputMaybe<Scalars['Int']['input']>;
  targetsLoadedGT?: InputMaybe<Scalars['Int']['input']>;
  targetsLoadedGTE?: InputMaybe<Scalars['Int']['input']>;
  targetsLoadedIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  targetsLoadedIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  targetsLoadedLT?: InputMaybe<Scalars['Int']['input']>;
  targetsLoadedLTE?: InputMaybe<Scalars['Int']['input']>;
  targetsLoadedNEQ?: InputMaybe<Scalars['Int']['input']>;
  targetsLoadedNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  targetsLoadedNotNil?: InputMaybe<Scalars['Boolean']['input']>;
};

export type TargetProblem = Node & Problem & {
  __typename?: 'TargetProblem';
  id: Scalars['ID']['output'];
  label: Scalars['String']['output'];
};

export type TestProblem = Node & Problem & {
  __typename?: 'TestProblem';
  id: Scalars['ID']['output'];
  label: Scalars['String']['output'];
  results: Array<TestResult>;
  status: Scalars['String']['output'];
};

export type TestResult = Node & {
  __typename?: 'TestResult';
  actionLogOutput: BlobReference;
  attempt: Scalars['Int']['output'];
  id: Scalars['ID']['output'];
  run: Scalars['Int']['output'];
  shard: Scalars['Int']['output'];
  status: Scalars['String']['output'];
  undeclaredTestOutputs?: Maybe<BlobReference>;
};

export type TimingMetrics = Node & {
  __typename?: 'TimingMetrics';
  actionsExecutionStartInMs?: Maybe<Scalars['Int']['output']>;
  analysisPhaseTimeInMs?: Maybe<Scalars['Int']['output']>;
  cpuTimeInMs?: Maybe<Scalars['Int']['output']>;
  executionPhaseTimeInMs?: Maybe<Scalars['Int']['output']>;
  id: Scalars['ID']['output'];
  metrics?: Maybe<Array<Metrics>>;
  wallTimeInMs?: Maybe<Scalars['Int']['output']>;
};

/**
 * TimingMetricsWhereInput is used for filtering TimingMetrics objects.
 * Input was generated by ent.
 */
export type TimingMetricsWhereInput = {
  /** actions_execution_start_in_ms field predicates */
  actionsExecutionStartInMs?: InputMaybe<Scalars['Int']['input']>;
  actionsExecutionStartInMsGT?: InputMaybe<Scalars['Int']['input']>;
  actionsExecutionStartInMsGTE?: InputMaybe<Scalars['Int']['input']>;
  actionsExecutionStartInMsIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  actionsExecutionStartInMsIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  actionsExecutionStartInMsLT?: InputMaybe<Scalars['Int']['input']>;
  actionsExecutionStartInMsLTE?: InputMaybe<Scalars['Int']['input']>;
  actionsExecutionStartInMsNEQ?: InputMaybe<Scalars['Int']['input']>;
  actionsExecutionStartInMsNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  actionsExecutionStartInMsNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** analysis_phase_time_in_ms field predicates */
  analysisPhaseTimeInMs?: InputMaybe<Scalars['Int']['input']>;
  analysisPhaseTimeInMsGT?: InputMaybe<Scalars['Int']['input']>;
  analysisPhaseTimeInMsGTE?: InputMaybe<Scalars['Int']['input']>;
  analysisPhaseTimeInMsIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  analysisPhaseTimeInMsIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  analysisPhaseTimeInMsLT?: InputMaybe<Scalars['Int']['input']>;
  analysisPhaseTimeInMsLTE?: InputMaybe<Scalars['Int']['input']>;
  analysisPhaseTimeInMsNEQ?: InputMaybe<Scalars['Int']['input']>;
  analysisPhaseTimeInMsNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  analysisPhaseTimeInMsNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  and?: InputMaybe<Array<TimingMetricsWhereInput>>;
  /** cpu_time_in_ms field predicates */
  cpuTimeInMs?: InputMaybe<Scalars['Int']['input']>;
  cpuTimeInMsGT?: InputMaybe<Scalars['Int']['input']>;
  cpuTimeInMsGTE?: InputMaybe<Scalars['Int']['input']>;
  cpuTimeInMsIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  cpuTimeInMsIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  cpuTimeInMsLT?: InputMaybe<Scalars['Int']['input']>;
  cpuTimeInMsLTE?: InputMaybe<Scalars['Int']['input']>;
  cpuTimeInMsNEQ?: InputMaybe<Scalars['Int']['input']>;
  cpuTimeInMsNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  cpuTimeInMsNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** execution_phase_time_in_ms field predicates */
  executionPhaseTimeInMs?: InputMaybe<Scalars['Int']['input']>;
  executionPhaseTimeInMsGT?: InputMaybe<Scalars['Int']['input']>;
  executionPhaseTimeInMsGTE?: InputMaybe<Scalars['Int']['input']>;
  executionPhaseTimeInMsIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  executionPhaseTimeInMsIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  executionPhaseTimeInMsLT?: InputMaybe<Scalars['Int']['input']>;
  executionPhaseTimeInMsLTE?: InputMaybe<Scalars['Int']['input']>;
  executionPhaseTimeInMsNEQ?: InputMaybe<Scalars['Int']['input']>;
  executionPhaseTimeInMsNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  executionPhaseTimeInMsNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** metrics edge predicates */
  hasMetrics?: InputMaybe<Scalars['Boolean']['input']>;
  hasMetricsWith?: InputMaybe<Array<MetricsWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<TimingMetricsWhereInput>;
  or?: InputMaybe<Array<TimingMetricsWhereInput>>;
  /** wall_time_in_ms field predicates */
  wallTimeInMs?: InputMaybe<Scalars['Int']['input']>;
  wallTimeInMsGT?: InputMaybe<Scalars['Int']['input']>;
  wallTimeInMsGTE?: InputMaybe<Scalars['Int']['input']>;
  wallTimeInMsIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  wallTimeInMsIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  wallTimeInMsLT?: InputMaybe<Scalars['Int']['input']>;
  wallTimeInMsLTE?: InputMaybe<Scalars['Int']['input']>;
  wallTimeInMsNEQ?: InputMaybe<Scalars['Int']['input']>;
  wallTimeInMsNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  wallTimeInMsNotNil?: InputMaybe<Scalars['Boolean']['input']>;
};

export type User = {
  __typename?: 'User';
  Email: Scalars['String']['output'];
  LDAP: Scalars['String']['output'];
  id: Scalars['ID']['output'];
};

export type LoadFullBazelInvocationDetailsQueryVariables = Exact<{
  invocationID: Scalars['String']['input'];
}>;


export type LoadFullBazelInvocationDetailsQuery = { __typename?: 'Query', bazelInvocation: (
    { __typename?: 'BazelInvocation' }
    & { ' $fragmentRefs'?: { 'FullBazelInvocationDetailsFragment': FullBazelInvocationDetailsFragment } }
  ) };

export type BazelInvocationInfoFragment = { __typename?: 'BazelInvocation', id: string, invocationID: any, buildLogs?: string | null, startedAt: any, endedAt?: any | null, stepLabel: string, bazelCommand: { __typename?: 'BazelCommand', command: string, executable: string, id: string, residual: string, buildOptions: string }, build?: { __typename?: 'Build', id: string, buildUUID: any } | null, relatedFiles: Array<{ __typename?: 'NamedFile', name: string, url: string }>, user?: { __typename?: 'User', Email: string, LDAP: string } | null, state: { __typename?: 'BazelInvocationState', bepCompleted: boolean, buildEndTime: any, buildStartTime: any, id: string, exitCode?: { __typename?: 'ExitCode', code: number, id: string, name: string } | null } } & { ' $fragmentName'?: 'BazelInvocationInfoFragment' };

type ProblemInfo_ActionProblem_Fragment = { __typename: 'ActionProblem', id: string, label: string, type: string, stdout?: (
    { __typename?: 'BlobReference' }
    & { ' $fragmentRefs'?: { 'BlobReferenceInfoFragment': BlobReferenceInfoFragment } }
  ) | null, stderr?: (
    { __typename?: 'BlobReference' }
    & { ' $fragmentRefs'?: { 'BlobReferenceInfoFragment': BlobReferenceInfoFragment } }
  ) | null } & { ' $fragmentName'?: 'ProblemInfo_ActionProblem_Fragment' };

type ProblemInfo_ProgressProblem_Fragment = { __typename: 'ProgressProblem', id: string, output: string, label: string } & { ' $fragmentName'?: 'ProblemInfo_ProgressProblem_Fragment' };

type ProblemInfo_TargetProblem_Fragment = { __typename: 'TargetProblem', id: string, label: string } & { ' $fragmentName'?: 'ProblemInfo_TargetProblem_Fragment' };

type ProblemInfo_TestProblem_Fragment = { __typename: 'TestProblem', id: string, label: string, status: string, results: Array<{ __typename: 'TestResult', id: string, run: number, shard: number, attempt: number, status: string, actionLogOutput: (
      { __typename?: 'BlobReference' }
      & { ' $fragmentRefs'?: { 'BlobReferenceInfoFragment': BlobReferenceInfoFragment } }
    ), undeclaredTestOutputs?: (
      { __typename?: 'BlobReference' }
      & { ' $fragmentRefs'?: { 'BlobReferenceInfoFragment': BlobReferenceInfoFragment } }
    ) | null }> } & { ' $fragmentName'?: 'ProblemInfo_TestProblem_Fragment' };

export type ProblemInfoFragment = ProblemInfo_ActionProblem_Fragment | ProblemInfo_ProgressProblem_Fragment | ProblemInfo_TargetProblem_Fragment | ProblemInfo_TestProblem_Fragment;

export type BlobReferenceInfoFragment = { __typename?: 'BlobReference', availabilityStatus: ActionOutputStatus, name: string, sizeInBytes?: number | null, downloadURL: string } & { ' $fragmentName'?: 'BlobReferenceInfoFragment' };

export type FullBazelInvocationDetailsFragment = (
  { __typename?: 'BazelInvocation', problems: Array<(
    { __typename?: 'ActionProblem' }
    & { ' $fragmentRefs'?: { 'ProblemInfo_ActionProblem_Fragment': ProblemInfo_ActionProblem_Fragment } }
  ) | (
    { __typename?: 'ProgressProblem' }
    & { ' $fragmentRefs'?: { 'ProblemInfo_ProgressProblem_Fragment': ProblemInfo_ProgressProblem_Fragment } }
  ) | (
    { __typename?: 'TargetProblem' }
    & { ' $fragmentRefs'?: { 'ProblemInfo_TargetProblem_Fragment': ProblemInfo_TargetProblem_Fragment } }
  ) | (
    { __typename?: 'TestProblem' }
    & { ' $fragmentRefs'?: { 'ProblemInfo_TestProblem_Fragment': ProblemInfo_TestProblem_Fragment } }
  )> }
  & { ' $fragmentRefs'?: { 'BazelInvocationInfoFragment': BazelInvocationInfoFragment } }
) & { ' $fragmentName'?: 'FullBazelInvocationDetailsFragment' };

export type GetActionProblemQueryVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type GetActionProblemQuery = { __typename?: 'Query', node?: { __typename?: 'ActionCacheStatistics', id: string } | { __typename?: 'ActionData', id: string } | { __typename?: 'ActionProblem', label: string, id: string, stdout?: (
      { __typename?: 'BlobReference' }
      & { ' $fragmentRefs'?: { 'BlobReferenceInfoFragment': BlobReferenceInfoFragment } }
    ) | null, stderr?: (
      { __typename?: 'BlobReference' }
      & { ' $fragmentRefs'?: { 'BlobReferenceInfoFragment': BlobReferenceInfoFragment } }
    ) | null } | { __typename?: 'ActionSummary', id: string } | { __typename?: 'ArtifactMetrics', id: string } | { __typename?: 'BazelInvocation', id: string } | { __typename?: 'BazelInvocationProblem', id: string } | { __typename?: 'Blob', id: string } | { __typename?: 'Build', id: string } | { __typename?: 'CumulativeMetrics', id: string } | { __typename?: 'DynamicExecutionMetrics', id: string } | { __typename?: 'EventFile', id: string } | { __typename?: 'FilesMetric', id: string } | { __typename?: 'GarbageMetrics', id: string } | { __typename?: 'MemoryMetrics', id: string } | { __typename?: 'Metrics', id: string } | { __typename?: 'MissDetail', id: string } | { __typename?: 'NetworkMetrics', id: string } | { __typename?: 'PackageLoadMetrics', id: string } | { __typename?: 'PackageMetrics', id: string } | { __typename?: 'ProgressProblem', id: string } | { __typename?: 'RaceStatistics', id: string } | { __typename?: 'RunnerCount', id: string } | { __typename?: 'SystemNetworkStats', id: string } | { __typename?: 'TargetMetrics', id: string } | { __typename?: 'TargetProblem', id: string } | { __typename?: 'TestProblem', id: string } | { __typename?: 'TestResult', id: string } | { __typename?: 'TimingMetrics', id: string } | null };

export type TestResultInfoFragment = { __typename?: 'TestResult', attempt: number, run: number, shard: number, status: string, actionLogOutput: (
    { __typename?: 'BlobReference' }
    & { ' $fragmentRefs'?: { 'BlobReferenceInfoFragment': BlobReferenceInfoFragment } }
  ), undeclaredTestOutputs?: (
    { __typename?: 'BlobReference' }
    & { ' $fragmentRefs'?: { 'BlobReferenceInfoFragment': BlobReferenceInfoFragment } }
  ) | null } & { ' $fragmentName'?: 'TestResultInfoFragment' };

export type FindBuildByUuidQueryVariables = Exact<{
  url?: InputMaybe<Scalars['String']['input']>;
  uuid?: InputMaybe<Scalars['UUID']['input']>;
}>;


export type FindBuildByUuidQuery = { __typename?: 'Query', getBuild?: { __typename?: 'Build', id: string, buildURL: string, buildUUID: any, invocations?: Array<(
      { __typename?: 'BazelInvocation' }
      & { ' $fragmentRefs'?: { 'FullBazelInvocationDetailsFragment': FullBazelInvocationDetailsFragment } }
    )> | null, env: Array<{ __typename?: 'EnvVar', key: string, value: string }> } | null };

export type FindBazelInvocationsQueryVariables = Exact<{
  first: Scalars['Int']['input'];
  where?: InputMaybe<BazelInvocationWhereInput>;
}>;


export type FindBazelInvocationsQuery = { __typename?: 'Query', findBazelInvocations: { __typename?: 'BazelInvocationConnection', edges?: Array<{ __typename?: 'BazelInvocationEdge', node?: (
        { __typename?: 'BazelInvocation' }
        & { ' $fragmentRefs'?: { 'BazelInvocationNodeFragment': BazelInvocationNodeFragment } }
      ) | null } | null> | null } };

export type BazelInvocationNodeFragment = { __typename?: 'BazelInvocation', id: string, invocationID: any, startedAt: any, endedAt?: any | null, user?: { __typename?: 'User', Email: string, LDAP: string } | null, state: { __typename?: 'BazelInvocationState', bepCompleted: boolean, exitCode?: { __typename?: 'ExitCode', code: number, name: string } | null }, build?: { __typename?: 'Build', buildUUID: any } | null } & { ' $fragmentName'?: 'BazelInvocationNodeFragment' };

export type FindBuildsQueryVariables = Exact<{
  first: Scalars['Int']['input'];
  where?: InputMaybe<BuildWhereInput>;
}>;


export type FindBuildsQuery = { __typename?: 'Query', findBuilds: { __typename?: 'BuildConnection', edges?: Array<{ __typename?: 'BuildEdge', node?: (
        { __typename?: 'Build' }
        & { ' $fragmentRefs'?: { 'BuildNodeFragment': BuildNodeFragment } }
      ) | null } | null> | null } };

export type BuildNodeFragment = { __typename?: 'Build', id: string, buildUUID: any, buildURL: string } & { ' $fragmentName'?: 'BuildNodeFragment' };

export const BlobReferenceInfoFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"BlobReferenceInfo"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"BlobReference"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"availabilityStatus"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"sizeInBytes"}},{"kind":"Field","name":{"kind":"Name","value":"downloadURL"}}]}}]} as unknown as DocumentNode<BlobReferenceInfoFragment, unknown>;
export const ProblemInfoFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ProblemInfo"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Problem"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"label"}},{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"ActionProblem"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"label"}},{"kind":"Field","name":{"kind":"Name","value":"type"}},{"kind":"Field","name":{"kind":"Name","value":"stdout"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"BlobReferenceInfo"}}]}},{"kind":"Field","name":{"kind":"Name","value":"stderr"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"BlobReferenceInfo"}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"TestProblem"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"label"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"results"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"run"}},{"kind":"Field","name":{"kind":"Name","value":"shard"}},{"kind":"Field","name":{"kind":"Name","value":"attempt"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"actionLogOutput"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"BlobReferenceInfo"}}]}},{"kind":"Field","name":{"kind":"Name","value":"undeclaredTestOutputs"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"BlobReferenceInfo"}}]}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"TargetProblem"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"label"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"ProgressProblem"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"output"}},{"kind":"Field","name":{"kind":"Name","value":"label"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"BlobReferenceInfo"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"BlobReference"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"availabilityStatus"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"sizeInBytes"}},{"kind":"Field","name":{"kind":"Name","value":"downloadURL"}}]}}]} as unknown as DocumentNode<ProblemInfoFragment, unknown>;
export const BazelInvocationInfoFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"BazelInvocationInfo"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"BazelInvocation"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"bazelCommand"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"command"}},{"kind":"Field","name":{"kind":"Name","value":"executable"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"buildOptions"},"name":{"kind":"Name","value":"options"}},{"kind":"Field","name":{"kind":"Name","value":"residual"}}]}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"invocationID"}},{"kind":"Field","name":{"kind":"Name","value":"build"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"buildUUID"}}]}},{"kind":"Field","name":{"kind":"Name","value":"buildLogs"}},{"kind":"Field","name":{"kind":"Name","value":"relatedFiles"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"url"}}]}},{"kind":"Field","name":{"kind":"Name","value":"user"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"Email"}},{"kind":"Field","name":{"kind":"Name","value":"LDAP"}}]}},{"kind":"Field","name":{"kind":"Name","value":"startedAt"}},{"kind":"Field","name":{"kind":"Name","value":"endedAt"}},{"kind":"Field","name":{"kind":"Name","value":"state"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"bepCompleted"}},{"kind":"Field","name":{"kind":"Name","value":"buildEndTime"}},{"kind":"Field","name":{"kind":"Name","value":"buildStartTime"}},{"kind":"Field","name":{"kind":"Name","value":"exitCode"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"code"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"id"}}]}},{"kind":"Field","name":{"kind":"Name","value":"stepLabel"}}]}}]} as unknown as DocumentNode<BazelInvocationInfoFragment, unknown>;
export const FullBazelInvocationDetailsFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"FullBazelInvocationDetails"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"BazelInvocation"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"problems"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"ProblemInfo"}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"BazelInvocationInfo"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"BlobReferenceInfo"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"BlobReference"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"availabilityStatus"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"sizeInBytes"}},{"kind":"Field","name":{"kind":"Name","value":"downloadURL"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ProblemInfo"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Problem"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"label"}},{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"ActionProblem"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"label"}},{"kind":"Field","name":{"kind":"Name","value":"type"}},{"kind":"Field","name":{"kind":"Name","value":"stdout"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"BlobReferenceInfo"}}]}},{"kind":"Field","name":{"kind":"Name","value":"stderr"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"BlobReferenceInfo"}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"TestProblem"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"label"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"results"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"run"}},{"kind":"Field","name":{"kind":"Name","value":"shard"}},{"kind":"Field","name":{"kind":"Name","value":"attempt"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"actionLogOutput"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"BlobReferenceInfo"}}]}},{"kind":"Field","name":{"kind":"Name","value":"undeclaredTestOutputs"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"BlobReferenceInfo"}}]}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"TargetProblem"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"label"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"ProgressProblem"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"output"}},{"kind":"Field","name":{"kind":"Name","value":"label"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"BazelInvocationInfo"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"BazelInvocation"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"bazelCommand"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"command"}},{"kind":"Field","name":{"kind":"Name","value":"executable"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"buildOptions"},"name":{"kind":"Name","value":"options"}},{"kind":"Field","name":{"kind":"Name","value":"residual"}}]}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"invocationID"}},{"kind":"Field","name":{"kind":"Name","value":"build"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"buildUUID"}}]}},{"kind":"Field","name":{"kind":"Name","value":"buildLogs"}},{"kind":"Field","name":{"kind":"Name","value":"relatedFiles"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"url"}}]}},{"kind":"Field","name":{"kind":"Name","value":"user"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"Email"}},{"kind":"Field","name":{"kind":"Name","value":"LDAP"}}]}},{"kind":"Field","name":{"kind":"Name","value":"startedAt"}},{"kind":"Field","name":{"kind":"Name","value":"endedAt"}},{"kind":"Field","name":{"kind":"Name","value":"state"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"bepCompleted"}},{"kind":"Field","name":{"kind":"Name","value":"buildEndTime"}},{"kind":"Field","name":{"kind":"Name","value":"buildStartTime"}},{"kind":"Field","name":{"kind":"Name","value":"exitCode"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"code"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"id"}}]}},{"kind":"Field","name":{"kind":"Name","value":"stepLabel"}}]}}]} as unknown as DocumentNode<FullBazelInvocationDetailsFragment, unknown>;
export const TestResultInfoFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"TestResultInfo"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"TestResult"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"actionLogOutput"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"BlobReferenceInfo"}}]}},{"kind":"Field","name":{"kind":"Name","value":"attempt"}},{"kind":"Field","name":{"kind":"Name","value":"run"}},{"kind":"Field","name":{"kind":"Name","value":"shard"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"undeclaredTestOutputs"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"BlobReferenceInfo"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"BlobReferenceInfo"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"BlobReference"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"availabilityStatus"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"sizeInBytes"}},{"kind":"Field","name":{"kind":"Name","value":"downloadURL"}}]}}]} as unknown as DocumentNode<TestResultInfoFragment, unknown>;
export const BazelInvocationNodeFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"BazelInvocationNode"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"BazelInvocation"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"invocationID"}},{"kind":"Field","name":{"kind":"Name","value":"startedAt"}},{"kind":"Field","name":{"kind":"Name","value":"user"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"Email"}},{"kind":"Field","name":{"kind":"Name","value":"LDAP"}}]}},{"kind":"Field","name":{"kind":"Name","value":"endedAt"}},{"kind":"Field","name":{"kind":"Name","value":"state"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"bepCompleted"}},{"kind":"Field","name":{"kind":"Name","value":"exitCode"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"code"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"build"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"buildUUID"}}]}}]}}]} as unknown as DocumentNode<BazelInvocationNodeFragment, unknown>;
export const BuildNodeFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"BuildNode"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Build"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"buildUUID"}},{"kind":"Field","name":{"kind":"Name","value":"buildURL"}}]}}]} as unknown as DocumentNode<BuildNodeFragment, unknown>;
export const LoadFullBazelInvocationDetailsDocument = {"__meta__":{"hash":"a20cab73c0fdf5295404e8d1ce75c39fa1eead4a"},"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"LoadFullBazelInvocationDetails"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"invocationID"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"bazelInvocation"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"invocationId"},"value":{"kind":"Variable","name":{"kind":"Name","value":"invocationID"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"FullBazelInvocationDetails"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"BlobReferenceInfo"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"BlobReference"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"availabilityStatus"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"sizeInBytes"}},{"kind":"Field","name":{"kind":"Name","value":"downloadURL"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ProblemInfo"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Problem"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"label"}},{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"ActionProblem"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"label"}},{"kind":"Field","name":{"kind":"Name","value":"type"}},{"kind":"Field","name":{"kind":"Name","value":"stdout"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"BlobReferenceInfo"}}]}},{"kind":"Field","name":{"kind":"Name","value":"stderr"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"BlobReferenceInfo"}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"TestProblem"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"label"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"results"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"run"}},{"kind":"Field","name":{"kind":"Name","value":"shard"}},{"kind":"Field","name":{"kind":"Name","value":"attempt"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"actionLogOutput"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"BlobReferenceInfo"}}]}},{"kind":"Field","name":{"kind":"Name","value":"undeclaredTestOutputs"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"BlobReferenceInfo"}}]}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"TargetProblem"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"label"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"ProgressProblem"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"output"}},{"kind":"Field","name":{"kind":"Name","value":"label"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"BazelInvocationInfo"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"BazelInvocation"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"bazelCommand"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"command"}},{"kind":"Field","name":{"kind":"Name","value":"executable"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"buildOptions"},"name":{"kind":"Name","value":"options"}},{"kind":"Field","name":{"kind":"Name","value":"residual"}}]}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"invocationID"}},{"kind":"Field","name":{"kind":"Name","value":"build"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"buildUUID"}}]}},{"kind":"Field","name":{"kind":"Name","value":"buildLogs"}},{"kind":"Field","name":{"kind":"Name","value":"relatedFiles"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"url"}}]}},{"kind":"Field","name":{"kind":"Name","value":"user"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"Email"}},{"kind":"Field","name":{"kind":"Name","value":"LDAP"}}]}},{"kind":"Field","name":{"kind":"Name","value":"startedAt"}},{"kind":"Field","name":{"kind":"Name","value":"endedAt"}},{"kind":"Field","name":{"kind":"Name","value":"state"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"bepCompleted"}},{"kind":"Field","name":{"kind":"Name","value":"buildEndTime"}},{"kind":"Field","name":{"kind":"Name","value":"buildStartTime"}},{"kind":"Field","name":{"kind":"Name","value":"exitCode"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"code"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"id"}}]}},{"kind":"Field","name":{"kind":"Name","value":"stepLabel"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"FullBazelInvocationDetails"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"BazelInvocation"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"problems"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"ProblemInfo"}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"BazelInvocationInfo"}}]}}]} as unknown as DocumentNode<LoadFullBazelInvocationDetailsQuery, LoadFullBazelInvocationDetailsQueryVariables>;
export const GetActionProblemDocument = {"__meta__":{"hash":"3368384a6bed2b74e78f79b5dc6df1bdd1de7bcc"},"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GetActionProblem"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"node"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"ActionProblem"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"label"}},{"kind":"Field","name":{"kind":"Name","value":"stdout"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"BlobReferenceInfo"}}]}},{"kind":"Field","name":{"kind":"Name","value":"stderr"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"BlobReferenceInfo"}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"BlobReferenceInfo"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"BlobReference"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"availabilityStatus"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"sizeInBytes"}},{"kind":"Field","name":{"kind":"Name","value":"downloadURL"}}]}}]} as unknown as DocumentNode<GetActionProblemQuery, GetActionProblemQueryVariables>;
export const FindBuildByUuidDocument = {"__meta__":{"hash":"68f971fd683017f221bf14224fa840922dc8a6db"},"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"FindBuildByUUID"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"url"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"uuid"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"UUID"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"getBuild"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"buildURL"},"value":{"kind":"Variable","name":{"kind":"Name","value":"url"}}},{"kind":"Argument","name":{"kind":"Name","value":"buildUUID"},"value":{"kind":"Variable","name":{"kind":"Name","value":"uuid"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"buildURL"}},{"kind":"Field","name":{"kind":"Name","value":"buildUUID"}},{"kind":"Field","name":{"kind":"Name","value":"invocations"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"FullBazelInvocationDetails"}}]}},{"kind":"Field","name":{"kind":"Name","value":"env"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"key"}},{"kind":"Field","name":{"kind":"Name","value":"value"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"BlobReferenceInfo"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"BlobReference"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"availabilityStatus"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"sizeInBytes"}},{"kind":"Field","name":{"kind":"Name","value":"downloadURL"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ProblemInfo"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Problem"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"label"}},{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"ActionProblem"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"label"}},{"kind":"Field","name":{"kind":"Name","value":"type"}},{"kind":"Field","name":{"kind":"Name","value":"stdout"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"BlobReferenceInfo"}}]}},{"kind":"Field","name":{"kind":"Name","value":"stderr"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"BlobReferenceInfo"}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"TestProblem"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"label"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"results"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"run"}},{"kind":"Field","name":{"kind":"Name","value":"shard"}},{"kind":"Field","name":{"kind":"Name","value":"attempt"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"actionLogOutput"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"BlobReferenceInfo"}}]}},{"kind":"Field","name":{"kind":"Name","value":"undeclaredTestOutputs"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"BlobReferenceInfo"}}]}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"TargetProblem"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"label"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"ProgressProblem"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"output"}},{"kind":"Field","name":{"kind":"Name","value":"label"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"BazelInvocationInfo"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"BazelInvocation"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"bazelCommand"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"command"}},{"kind":"Field","name":{"kind":"Name","value":"executable"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","alias":{"kind":"Name","value":"buildOptions"},"name":{"kind":"Name","value":"options"}},{"kind":"Field","name":{"kind":"Name","value":"residual"}}]}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"invocationID"}},{"kind":"Field","name":{"kind":"Name","value":"build"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"buildUUID"}}]}},{"kind":"Field","name":{"kind":"Name","value":"buildLogs"}},{"kind":"Field","name":{"kind":"Name","value":"relatedFiles"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"url"}}]}},{"kind":"Field","name":{"kind":"Name","value":"user"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"Email"}},{"kind":"Field","name":{"kind":"Name","value":"LDAP"}}]}},{"kind":"Field","name":{"kind":"Name","value":"startedAt"}},{"kind":"Field","name":{"kind":"Name","value":"endedAt"}},{"kind":"Field","name":{"kind":"Name","value":"state"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"bepCompleted"}},{"kind":"Field","name":{"kind":"Name","value":"buildEndTime"}},{"kind":"Field","name":{"kind":"Name","value":"buildStartTime"}},{"kind":"Field","name":{"kind":"Name","value":"exitCode"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"code"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"id"}}]}},{"kind":"Field","name":{"kind":"Name","value":"stepLabel"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"FullBazelInvocationDetails"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"BazelInvocation"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"problems"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"ProblemInfo"}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"BazelInvocationInfo"}}]}}]} as unknown as DocumentNode<FindBuildByUuidQuery, FindBuildByUuidQueryVariables>;
export const FindBazelInvocationsDocument = {"__meta__":{"hash":"7151b14bba5e7ea3e0f6e50882cc2f429591feb9"},"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"FindBazelInvocations"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"first"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"where"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"BazelInvocationWhereInput"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"findBazelInvocations"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"first"},"value":{"kind":"Variable","name":{"kind":"Name","value":"first"}}},{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"Variable","name":{"kind":"Name","value":"where"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"edges"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"node"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"BazelInvocationNode"}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"BazelInvocationNode"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"BazelInvocation"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"invocationID"}},{"kind":"Field","name":{"kind":"Name","value":"startedAt"}},{"kind":"Field","name":{"kind":"Name","value":"user"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"Email"}},{"kind":"Field","name":{"kind":"Name","value":"LDAP"}}]}},{"kind":"Field","name":{"kind":"Name","value":"endedAt"}},{"kind":"Field","name":{"kind":"Name","value":"state"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"bepCompleted"}},{"kind":"Field","name":{"kind":"Name","value":"exitCode"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"code"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"build"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"buildUUID"}}]}}]}}]} as unknown as DocumentNode<FindBazelInvocationsQuery, FindBazelInvocationsQueryVariables>;
export const FindBuildsDocument = {"__meta__":{"hash":"8edb3e7557d6c22033afe132a5975af6d3ffb001"},"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"FindBuilds"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"first"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"where"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"BuildWhereInput"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"findBuilds"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"first"},"value":{"kind":"Variable","name":{"kind":"Name","value":"first"}}},{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"Variable","name":{"kind":"Name","value":"where"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"edges"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"node"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"BuildNode"}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"BuildNode"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Build"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"buildUUID"}},{"kind":"Field","name":{"kind":"Name","value":"buildURL"}}]}}]} as unknown as DocumentNode<FindBuildsQuery, FindBuildsQueryVariables>;